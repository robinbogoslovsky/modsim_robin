(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    520406,       9802]
NotebookOptionsPosition[    516498,       9719]
NotebookOutlinePosition[    517514,       9747]
CellTagsIndexPosition[    517432,       9742]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Building the SIR model", "Subsection",
 CellChangeTimes->{{3.9634240485669384`*^9, 3.963424051842436*^9}, {
  3.9635676314136295`*^9, 
  3.96356763237097*^9}},ExpressionUUID->"475035a8-684c-5544-ba31-\
1dfafddae7f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{
     "S", ",", " ", "Z", ",", " ", "R", ",", " ", "t", ",", " ", "beta", ",", 
      " ", "gamma"}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Define", " ", "the", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"beta", " ", "=", " ", "0.3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sirEquations", " ", "=", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"S", "'"}], "[", "t", "]"}], " ", "==", " ", 
        RowBox[{
         RowBox[{"-", "beta"}], " ", 
         RowBox[{"S", "[", "t", "]"}], " ", 
         RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Z", "'"}], "[", "t", "]"}], " ", "==", " ", 
        RowBox[{
         RowBox[{"beta", " ", 
          RowBox[{"S", "[", "t", "]"}], " ", 
          RowBox[{"Z", "[", "t", "]"}]}], " ", "-", " ", 
         RowBox[{"gamma", " ", 
          RowBox[{"Z", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"R", "'"}], "[", "t", "]"}], " ", "==", " ", 
        RowBox[{"gamma", " ", 
         RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"S", "[", "0", "]"}], " ", "==", " ", "0.99"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Z", "[", "0", "]"}], " ", "==", "  ", "0.01"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"R", "[", "0", "]"}], " ", "==", " ", "0"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sirSolution", " ", "=", " ", 
     RowBox[{"NDSolve", "[", 
      RowBox[{"sirEquations", ",", " ", 
       RowBox[{"{", 
        RowBox[{"S", ",", " ", "Z", ",", " ", "R"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ",", " ", 
         RowBox[{"Z", "[", "t", "]"}], ",", " ", 
         RowBox[{"R", "[", "t", "]"}]}], "}"}], " ", "/.", " ", 
       "sirSolution"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Susceptible\>\"", ",", " ", "\"\<Zombified\>\"", ",", 
        " ", "\"\<Removed\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", " ", "\"\<Proportion\>\""}], "}"}]}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", " ", "->", " ", "Thick"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.9634232255813923`*^9, 3.963423448719919*^9}, {
  3.9634235200373497`*^9, 3.963423544490959*^9}, {3.963423575506817*^9, 
  3.963423577390745*^9}, {3.9634236247228775`*^9, 3.963423703913761*^9}, {
  3.9634240340790215`*^9, 3.9634240402442436`*^9}, {3.9636845150351543`*^9, 
  3.9636845386311417`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"1561e099-daaf-8246-a542-46eef122b149"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.24, 0.6, 0.8], 
           Thickness[Large], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwV1nc8Fe4XB3AkqbSkQiqhQhGlSDjH3vvKjcrelVHJjKiMhKx8zZSUvrkD
IZk3W2RmZiXZV8XXzu/+/npe79f5nPN6zvPXc9Ta1ciOhYmJyYSZien/p0DU
+su0w5UKAhef3+Ui0aGQXeTIDcd0eJV75Qshhw6VXqRMYUcyVLbk74l7R4ca
CXcHNsdyENXmFNj1Lx3qIto0Fhy+wKxsKC6+pkO9bPCHaYdBaBFU+/Ukgw4N
T/vcxx3oEFz1Jqoulg6hiQn1sZJzEP4nYWEohg6nHMHsLHkOjlEK1xaf0sFj
y1Nfj7e/oHvr8NjRaDr8VZUqm3v+B2ySns3bRtCB+5OP8syTRRi+evxE1gM6
aJVu0Rtz2ADHM5/2st2mg+SG9cL+uQ1Y3NXI1uVBhwh+i2ZBOSb0PfSXI8ud
Dreti+8QqphwKQ/VFVzpoDLmVvW+gxnfSeYfNXWmw8jMNyuvhU2oa9TdcMKS
DvzrhSnr59lx/YTgZ3EtOnCl2c3t82VHl5mDJ0s06MAOe1XEy9lRtdZfWl2d
DvTAm1PX1Lfi+9U2rUsqdChjPSZbYboNa+DImqkCHa5yxHQFeXHgkYDT98Yk
6dC04/xW1qu7sbewd2PfATq0aXMmNvvtxm9M9ENu++jQHTZ7/J+U3bjv970v
tXvpMLr5tYp4/25czQ0fdN1Nh7X1A4FE8z2YvxFHeLGVDqKzy/+9u8yJKbpR
KU9WZyG0uXTU5BIXroyOTtp9m4VIjqRb/J5c6DXEOerSNwtxWp4sU/Fc6KZi
xOLaMwvpNeL8gZ1cWOQinX69cxYKytLN3xL24TnFld8qTbPwg3S/7a/RfjxJ
MKu2L5kFpSjVitf63Pj76YNOQuIsBGrlZ7fd5EaOGmlO1oRZKNssGLv+hBtz
x8d4KbGzIOvHZG/8mRsrDUXu/42chbNOH7dvaPBg6cFW6dsPZ0FIWdL0khIv
7jk0wFzhPgtsi3yzrOf4UCaTp75UfRZUch93nSbwoVXDlT0bKrMQdGOlwuwW
H04E5byRU5qFv9+7YilUPgzx88l/JzcLiy0xF66IH0Iena8tFpKzMP6W/WHe
icMoN7gStZN3FuxOr+yQ3MGPJaaiR93HZ0CnL+QV92F+jFKNn5kZnQGpkH3y
TKf5cVAnvMZueAZYByWufzHgxzueSaFqvTPwItKh4UYcP+4621bQ2DgDgzMd
j94ePIorVMHtQzkzcPkdeUNQVAATLqXv335zBpAo/2z7RQFkUknaO+g0A8Ks
jeJ/tAVwvFHFI8duBpbMx67Sbgjg6uMguHB1BhK2HyqxpAog9Xf8Qw6dGWh3
DvdKlRFE3xDqsVThGdAVsfu1X10IP6Vt2qL8bRpWHt/5+O2SEK627zbN6Z6G
N7MPH2baC2HynwIpzo5pYM3P4jnzSAhFFivCGhumoVhhXFG3Wgg3n3WXXCuc
huMEl5hg5WPIkeRyyujpNDAFuJ+dg+PIIn5gZyFMA2n4/nqB/nFcqCfSXWSn
wVwlptbf4jh6uYRN856bhoKteebbA47jg/vlYg6i03A9bj74eNlxlNJ671bE
NQ092Xc7rsidwPXVbKWL41OQ2+F/p15GGC1Snn4mh0/Bm4e21iOawoz7rr7i
fzAFaee19VfNhHEsh1ci3H8KwhO5RcT8hfGhopaeutsU2FzJ64+uFMa5VBVv
J5Mp4BodVyZqiWDcn4sV2oenwPOPMedPc1EkGNv3+76dhIucomTWgFOYml1Z
7vZuApqZzeqbok6hxUqChFjmBFj+Cvue8PwUul0rejKSPAEPWiYOiNBO4Smv
g9wyjxn5yOxA3c1iOPBsS0mkEyO/XcQo4bEY8sjLFUwLMfKswgsnEsVRhHrl
6cOEcXBYjUl9RZTAAwrq3w3tf4Jrzc+zZN0zKCiMnnkLoxBuxnZs/boUvovh
FD51dARsan3tJR3P44GArBgHlkGo3MJj6HJZBm0X9OHihV4Yeymu1WMlg52a
vGdSjvUCB6ooqzvLoNBaJA87Zy8QvVzPCfrK4N1wy3mmqR6gj1fz9KXIYFHZ
poNeqT1wqMFjRGtIBsecdEQesfaAd8TnW6IOF3CYpttg1dcFknsCEyZuy2L7
wXMnE3I6oZi9S7jWTxbvBCfU70nrBCUm8Y+ZD2RR7egMMTGyEwj0vkGLOFms
yNXSrXHtBM8maZGvebL4hMvv+asznVASRv9I+y2LN3ZaRHoUd4AGi8VwsttF
NNsnOa3W1g6Wf+RP6V2Xw+6AKtlQgTbYwcnU0nFbDqtrLJXfcLVBsQTtlrm/
HMr6KBV0sLUB1021j46RcvhBQqPBaKoV6sb1tIIpcrjCrHDke34rSAxYOBbN
y+G9mn3O+lqtwFR/P1PAXx6vl0ZQxO61QM5PZY3sh/J4eZF2vMW9BczY2KZP
R8qjT1Cg5j27FshXDj8rny6PB9Jeeq3rtIBjWQzNtFIeh+zZix/xtUBL3suh
iM0KWA+BZv6+XyAjrZpv8YkCTu2sSxHc0wwpV051mSQo4GDVY0LaahMk8sY+
zU9j1Jeca8XGmiAywZLNg6yAR812ZIZ/bAKfyFX6dIsCRnv1p8s6NIHRPclP
I3sB/Xu5Y+xpn4H1WqpT8z+ABaMtwsEhjbBxkFVI7AXg3X0CXF63G2Glx3ng
8VvAOK7P7QFWjTBnImOs+RFwWEYgpvZiI/TrtstV9QP2vUwnnv/VAL1prOzf
diHKEAR9gy0aIC9Stq/NCFH621Kwq2Y9WCfv3Fx8CTHig8c12oV64HwzIp5h
huitrj4tKFoPbpXhQa7WiM0b8XOc2+vh1HyvCIcHYsazIcX0pjrIvOzrpfoU
sXLnkLS9SR3ECZXsK/rC6O/20TZ1rQVlyWhIb0dM779Q7mhVC7/lbZ0edSHq
3D5mFWJcCwamHKWEQcTGWEemaela4Ai/YvtrFtFu26S1IXMtPKCv5YruVMSN
J+ecgxJq4HaxvEGqjiL+UeRvOdlQDe/Nall6DBQxKkOQqbKkGv5bMXjPZaKI
ivUPmWzJ1eB90ZY34qoixt+zkG2Pq4Z7JeGjPjcVkX1YepuJZTWElHV5EaMV
MeXBYnfPchUk0dwz9nYoYmTUednQ81XQZ71qrN+tiHsfL30uEa0Cvk0P2R73
K+LImOH99cNVkKac6MLyQxGtLjoffLmlCl5WlZ37taCI3z4+yfHv+QTvarY3
NB9QwnltxR12AZ+gvOHV7zBzJfynMW/363Ya5HK3uPtbKKHE5FvdpXoaZNqv
zLnZKOF+HesGowoahLPo001dlFDt98Wrgjk0IMguTR3zVcLyW5WDkiE0mMzW
+lGZpIRpf38dWpOjAVcYvWu5h5E/6iXDTq4Eti4e05lvSsh8+r8p16xKWBZS
+To0rITPzl2oHkythIGKxI7aCSW0MeWr7YqohOwlxdb4ZSVM2VvMK+xSCQqO
cQ2SPMoYInaZqiRSCU7qF0qdiMrIb2yUJPJvBcwK81RTryjjPzGbHL+/qACP
bcufly2VMXOyOf1VUgX4NRX1hzkp47s+2RPK4RUQbSyzlu2jjIEPuEOHnSqg
wEL64mSKMo5EXA14KVoBLF7nPjgPK2PZGyZbJttyCLm8rzL3hzLe7r9X72JS
DhwXF+pWJpSRqsja9kOtHPb9ze8O/62Mo7/+hGwWLQfhB1JLbzepYKdpw4df
c2WgH31WeuqYCi4Jpfx0vV8GKW8k37s4q6CgC3V30rtSqOuxqUu/qYLD96tp
i+mlML8toa/dQwV5L48VW8WWgvaNFWY5X0Z/8n5tM59SWJH8pMcRoYIgsfG4
X6MULn8kjL/LUcGrPtcSeMdLYH/z3YOzcyp4ffwRy7HTJfD0T+l9t7uqKDPR
dHKgvxhutkVbXfFVxcWAxE+J7cWgQ7VR1AhQxRPUFw/MG4qBzXUrM3+IKnI8
oNssFxaD3yQh8EuCKnYbl1XGxxaD/fDUPfECVUzua9TR0ikGuS88ftPzqmgc
EXjuxqcPMPb2jqejhxrOVzL3MNcWwaVDfwfeeKqh7faZw9NlRVAd9Uh9wkcN
m+6PjX4rKILM28+4nYPV8JlY2JeurCKwVvhQ7BKnhmoc8xeEQopgoHXt780C
NUxVbJvm1iyCzqXgkDsrasin9pcIbYVQpRaTGBSkjqp5ooSlxQL4Yf+xyeeR
Omo0jQou/ioAtpBRllvh6hiac3JjZaoANGrP37CJUUeLK8JVe4YK4LN6n6LK
C3Wcq7VZ8akrgHYNoanNNHVkCn+6Ip1UACNaBfJhzBoYzPT8lbxiATDr945E
BWqg4fM8w5CU91BXZiJ4+4EGnjgcWlT27D1Ei7faEEM1cFoAFpZj3gP/zrpR
/mgNXKs5POIb9h6w6f0YNV0DdTNEj+d4vodA7aeT7WUa6CCdIEszfA9MGhq/
D6xrMP6L+y+kb2NYsYD5ubcmXo9NtvZ9lA9mKj8buv01se/3cvmFoHzIV+eO
2xOkibXF1QWr/vngqOdzPDhcE9O5mGzD7+RDq7mCtn2yJm4a9bZts82HF541
cadKNVE8yvDCNpV8UHn39cQHJi2s37Rzz6bN+RB6YFG3LUQLo/J5PVyi8yCu
ru477bEWsny7RTrzJA/SvZO886K08Ahdx2EtLA8K+uRfxT3Twse7VlSfBefB
j/QHa5dea2HnaprvpGceKAlz/ttXo4WqplunWK/lwZqMGPuPzdpYXyOztiKW
B25mNrTFYG38nl9TGtiRCzvTJ4fkQrWxTUPCOK01F959d9+4H6GNLksSKmXN
ufDzeqAcR7w2fvo4d3pzfS5cC0gt4M/SRiXtC3RSaS7oZHa91azTRlXr/Ufd
XueC8Kx2bDKHDjpl+Jcn++XC8H0pW4jXwRglb0dxsVw4vn9npNs/OniD+5Dx
gGguOL/9WZiRqoOLNI5d0cK5MN+WtJ01SwefebXMLwnmArsQc15dgQ6GP6Pr
DvHmgnhNE7NRtw6qS5SNbdqaCz7bHNJtD+qivZiIVNwYFbhi/+kNy9DF3vWv
ZaFZVNjWubfV45Uutn+J0KJlUoHpQGStebYuDuCrQ+svqDCTFJQvRtVF45zv
8Z7pVKh54RLZWqGLlS4DVK9EKnjlyivxDOkis8XW3KJwKnxrHc5+c1gPaU/q
xvjdqJC1W9S7NlkPm16PJFsqUEF87PIS63M93BGVH1IlR4XCj2F3lTL1cPfA
EFnkIhXq7CfulL7Tw4irLZRFaSpMlrzxyCvVw+B9FpdeSFJBzOnE9fRBPXwR
YGgheYwK+ZVCFncF9VF8yXv59A4qVHocUT3xrz4eOvD9q+8QBVYW6NF8ZH3s
kv+xXWGQAlLeFf178vTxspbeUeYBCrwJsLq9VqyPUspjk2F9FIiOePmytUEf
M5aPjb/6SgHLrBMsfpP6qJqZxbKliQIb088sxrkMkF+j7I5TMQXS+J/zyRMM
kNvysNqTZxTYGS5ZJ3bJAGUNUraGJlAg4A/t1mGiATaaTQcExzPm1fxo2DA3
QOcSgWC/WAoIXD/pTbMxQHpq3VfPKApkFRZ0qt8ywDS5Jc2IEAqQ9JoijWIM
kH19+IC0FwVK/VaYHFsMMAXyOT3MKfAfeWwuqM0AraJHBYPNKCDxvW0otcMA
Ka8bR+MuUyBT89+K9m4DDKZX3yo2pUD4/iuBMGyA41oZRTsIFLhEKd3Y/9sA
rR2zXDt0KED/Hvi3eq8h+q8G8w8qUOCo9pY1QVNDvHtBm7VZiPF+ncptvJcN
0X3b+C0uhtUsAt/sMTdE4rkWK3NBCjjfWiZsXDNEEyOJwsmjFMhPnsrptTfE
7mK6wq4jjPz0F4unnoZ4s8PFy5WHkX+S+OlvvCGKpV5VDt/JyH8RedzTYYjW
0mmPxObJEC1Y+WrlqyHeebLB1fubDC53iRUHewxxMHQxOeQXGQSOhCxc/caY
nzMU/WOWDFE3Ry1GfhiilA3HppwJMjjvSJea+s8Qr3G6XncaJAO/NtfAGrcR
kmUi3WIbyRBR81eC/6oRnqYpOD/MIgO6j0kesjDCxi33LP1fkWH+YPMZXisj
/FUtvc0zkwxX3FOluOyMMFv3vKfTCzKI8cnJsN8wQu9F/pfENDI0u3vDnJ8R
7uQtGjNNIMPuQ/O6FSlG+LZGo/rrIzLE3ppwtuxn1PNGsz86kcFv3+FdApeN
kTZpuUKQJkO2yOaG20PG2HzSLkN7KxnY5pl5Kq8R8JixoKPgDxIsURIjRy0J
uPePV0jsKAmmbpxmZbchoOB6wQ5Whlt+XqHrORBwsn1ad2yEBEl9hdX9roz6
6/p48hAJxD/d8FgKJOAO38gtJv0kuBTT03j6JQG3RnnHT7ST4LUE9V7aTwLu
4vW9LlpFgpv7fi0XThAw1lzgWv4nEkitSNxpnSKgeVPkCwWGKz5RXFjnCJjz
PV+AQCNB9yUK0XmJgOXcYstBFSRg9yefOb/VBENbrZroJSRwrM8ZaxI1wRmB
/zJYC0ggYv1Wb/2GCR7tWvHclU2CPs0PuSZTJug7/6K5KJYEbS99xODWJdTf
yPA9G8jYP89QTuD3JSRczbbociPBRpHH+0c3TXGgJLOTw5YE2hJqqn4Lpuh9
WI1oSCRB7dXTTi63iMg3xZXLqU8CThvHj6l3iGizVaNsWo8E1xwzdrTcJeJ8
I9NYDcP/eezNlfIjYtqJdyG+DAuFLq6sPyDi8bmsPWO6JAjMLY+ITiBiYd12
iQodEshuMaC8/0DEsi+R+0O1SPCII4xl/CMRV9Qqbtox3LqHRuAtI+Lhc4JD
Sgw78kkt36MR0U5HaudfTRI8k+RW0mgkYo1ScPwdhufNh9p7+4nYJ9aOThok
QCue4zsGiZh5OkxQg+HH9kZeMExEB2adwycYFnCv4sv8QUSBKZL5D3USGD56
Y3djlojqeRN/rBlOeTxcmD5HxKrdbPFKDI9H825r+83wZIquAMOByRGk84tE
jJucYx1RI8Hn59VMTstEfOQbtonG8IGsv0bJq0REC2OeFwxb/yv9qmmdiARt
ObUghkkUt8WNDSIaLUiGWzP8PyH6L6w=
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.95, 0.627, 0.1425], 
           Thickness[Large], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
/wBMNiue
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.455, 0.7, 0.21], 
           Thickness[Large], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
b3mua/Bb4HIJ5HYfafvE8/8AJDXWwQ==
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJwV1nc8Fe4XB3AkqbSkQiqhQhGlSDjH3vvKjcrelVHJjKiMhKx8zZSUvrkD
IZk3W2RmZiXZV8XXzu/+/npe79f5nPN6zvPXc9Ta1ciOhYmJyYSZien/p0DU
+su0w5UKAhef3+Ui0aGQXeTIDcd0eJV75Qshhw6VXqRMYUcyVLbk74l7R4ca
CXcHNsdyENXmFNj1Lx3qIto0Fhy+wKxsKC6+pkO9bPCHaYdBaBFU+/Ukgw4N
T/vcxx3oEFz1Jqoulg6hiQn1sZJzEP4nYWEohg6nHMHsLHkOjlEK1xaf0sFj
y1Nfj7e/oHvr8NjRaDr8VZUqm3v+B2ySns3bRtCB+5OP8syTRRi+evxE1gM6
aJVu0Rtz2ADHM5/2st2mg+SG9cL+uQ1Y3NXI1uVBhwh+i2ZBOSb0PfSXI8ud
Dreti+8QqphwKQ/VFVzpoDLmVvW+gxnfSeYfNXWmw8jMNyuvhU2oa9TdcMKS
DvzrhSnr59lx/YTgZ3EtOnCl2c3t82VHl5mDJ0s06MAOe1XEy9lRtdZfWl2d
DvTAm1PX1Lfi+9U2rUsqdChjPSZbYboNa+DImqkCHa5yxHQFeXHgkYDT98Yk
6dC04/xW1qu7sbewd2PfATq0aXMmNvvtxm9M9ENu++jQHTZ7/J+U3bjv970v
tXvpMLr5tYp4/25czQ0fdN1Nh7X1A4FE8z2YvxFHeLGVDqKzy/+9u8yJKbpR
KU9WZyG0uXTU5BIXroyOTtp9m4VIjqRb/J5c6DXEOerSNwtxWp4sU/Fc6KZi
xOLaMwvpNeL8gZ1cWOQinX69cxYKytLN3xL24TnFld8qTbPwg3S/7a/RfjxJ
MKu2L5kFpSjVitf63Pj76YNOQuIsBGrlZ7fd5EaOGmlO1oRZKNssGLv+hBtz
x8d4KbGzIOvHZG/8mRsrDUXu/42chbNOH7dvaPBg6cFW6dsPZ0FIWdL0khIv
7jk0wFzhPgtsi3yzrOf4UCaTp75UfRZUch93nSbwoVXDlT0bKrMQdGOlwuwW
H04E5byRU5qFv9+7YilUPgzx88l/JzcLiy0xF66IH0Iena8tFpKzMP6W/WHe
icMoN7gStZN3FuxOr+yQ3MGPJaaiR93HZ0CnL+QV92F+jFKNn5kZnQGpkH3y
TKf5cVAnvMZueAZYByWufzHgxzueSaFqvTPwItKh4UYcP+4621bQ2DgDgzMd
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
ObUghkkUt8WNDSIaLUiGWzP8PyH6L6w=
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
/wBMNiue
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.455, 0.7, 0.21], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1:eJwVznk41IkfB/DRquTYlSjKthMSEgYdhM+nQnJfTd9cITJy5D5CrlwROXPF
yDVUSMlGYnQo1pHuZEUpxUyDEC3zm98f7+f9vJ7n/cd7m+sZa/dVJBKpipf/
t0zGcnnJVqYeKSbGpS9pm16zgOJfPrRS8AlvkQ6XIQEzrK5CgVYP+9zNCykq
ovBYzd9jDa0dnhp2V80ZkuFJ2qDRnEc/jE+dH7gZrgZPtePvTnmMwFhAUNXE
KEJ35pD/hMd3OCXpYlh5zwqS8/OeZlM4IGYx7//XcWtQpoGdRj0HPuy9K586
bw0BazMjAmqnIfFqZK2Opi2sGGje59BnwTUila3SSgXJB2cPsS4uwNOTpowr
P+3BuG2t+WcPLjgrbelVLjkJFK7r3EYOF4SO6lT/4HeDNPKJPlkdEja+4c/0
8HaDINeWYNuHJJwl2T2z1nUH/c9+D5te8GHKm/Ymhy+nYIw17BI29xt+bJ0r
2+14GsjLzcXLewRQXCLOTmzKD8RL3DkSEQKoWr3xCO70BwHYoK/SLoA3zHKT
X532h+8xvpNOh9dhTVpbot6kP9zn367dcUwQox82Un+fDgBH4azXcWHC+IEy
7ADrg6FXZM86fkdR7Hh2Q+QVIxwGTcTy+yJF0Zbv+Lq90+HwJoUtX1Asihyb
CtM12mfh0+pqfZX3oug6JWU+889Z+G95Uwxhvx4HUl1axX5GgBJ7cf76cTHU
y/LYs87tHCT3tX06ShXHtS+czjX3xEK6cGEgOUQco98WSPgvxEKOcciqyVxx
HMxn1nrLxkHpYxVyzEtxPFRLNd0ZGQd37pfa19pK4Lv3YkMDavEwXhc7uGK9
EYUrbxaKVp+HgxkGHdUWkphr310j1J0EMca3awZ9JbHVb57TvJwE91fLZi9f
lER6e9C1ekoyaEeSTtn8I4nzOgyR+MJk0PBsFeIaSeGgxPWLD8+kgNwhyjHq
wc3oKmX3QFAxFdYsSLP5d0vjC2rklsy36aDfmPpa1VYaE+J+9oVsyoA4n6UO
u0BpjK5ZoTUdzYCVj6+zG25Ko2en53p4ngELA1laDip/4mRSjI6R5yWYqBVI
uLVjK2pdedJg5J8J7qpLIhQRMvpDj8/tymwwHUqqlNxKxiytSt3e3mzQTJLQ
JanyHGpzRHY+G/hH1Lz7LcmY0abhlHw4B66me3T75JDRx7f6PbByYIT1IrF2
yzYU+RH8oU4/D45fr+fKKslgrubCr/HtBYCE7mWh/TIYmh7lZ0otAAX+HpVZ
ExnsqZjj/5VYAD/tPzt2+sigf+S+RcrXAsgT+vOe800ZjPkjlCt6sxCen74Q
dmWfLBrLPSj8aF4MZoru0xsPy2H6OUI88FEpLKUGtw5T5bAjyq2u7lcpMNgJ
CRWn5FBnc26DlBQd+G9XSaknyiEjTrNW2JIOLXoTB8weyWHAd9XtDe10kLf1
yoo/tB0XR7uKRavKgBTtr8EBedwq6Pbd5lI51I3GLt+xkMfv14cWrBrKwV4/
qyvqhDz+Nh/ACB8ohzvrbtkLRctjid9gteH6CvDO+REvf18eN7SLMYZyKuBt
TegLB50dqHZ+s8jGikpofBEV/HSfAs6ZzTdxPlYDI8HNdeyIAupJka8UCjOg
ZI+JxS87BbwjZpwdsZsBF/IlFXdFKeATq6hzH5MYcNLh1vtLTAWMNgkTsVKt
AfFPE4cIY0UMSzg7P5BcCyGzNmJf7JXQTXExdsDjBnhXaHO53krINA9F5uUb
4Hp025TkOSWUobjGfu+6AebN7EfGdCWc2e1mu1qxDnZEpITXfVJC7e+cB1vY
dfBmVfuHYJ+d2F+QIfvHwQbYL6ZUzx+tjPtkTLxdODehj8/uaW+GMvYHFgUO
CzWC83TKxzy6MvoLXmaH72iE8wNfNyl2KqNR2Xi6+IlG6EuviTFbvQvV6/ZW
DPbz9kKK1nmpu7DRmxER33wLzvMrzO3IV0ELE9XN++hN4PEr60oloYYdSVVK
Nu/uQo751INwZzWUelVdtOq/u9BRZvDNjKaGuXWyMc/+bAFJo5975kPVcORT
HrPXpQWe5DgOGF5Ww7HpDa9xsgUUVRR+m3iphsNRP9ZI8N+DSec2mpINBat0
Bh0yzO7DmcdfNOrN1NGA/lNlupQJHXjdS5mqjt7Z10xj7zBBtNWvvMZJHefG
vr2W7WVCQ/2iWMUZdUxzEZSlLzFhJl9oJj9THQ+513ODqJ0Q4qXaEPdSHfVP
3JNIXf8AIkVDlamOGjidnXBPM/chXLBbs33ZWxP3zpR7ug50wcmuiFMU2h6k
+15gN0X2AXOtlJXX8X04XzTs+/bZIFDWx+R9DdJGwnJnfeDoK3Ce1VU299ZB
R1nn81IN76Cs5JH0wkU9FGzTWefV8C/cStceGrRGJMq2GZAooxDUomt5xfQA
DpnEKwV2jUF7d+VMiv1BFE2fHMqgfgLPw1ptnsQh/NvhpeXa8nEoZlCavE7r
ozh/fc3wh8+QOdsW6xdqgAHjWvnXOF/gc21wCC3AEN2WJUSovRPw0DArPy7u
MAq7+5Jsir8Cn8W7sYwYIxzXLn5VfvAbkA7c4aOHH8E7drp+/v3fIHnTgtlg
kjEWnUj0oVlPgp/dyc6FeBPUO+306GXLJIzGarpBril+yRPSN9syBeLZBe9S
ysxQ8C61P8JrCqpElcK7iszxYtJ+G6VrU8AM+MtgxzULvD1CSR4Zn4ISMl1a
19YSyVcP5DuIs6AtcolEG7DEcUbYycP7WbDNZO1/ssesMJUxvn37CRbc7ldM
ffvCCnPJPdz4CBakPV5RIztao/DHmaWMXBZkB3497fzeGhXrao3JtSyIlNj6
h8xxG5Tv9Dpm0sqCGsXV3UEfbFAqZUVSrIcFa37wSTGdbLFVuyM78TULqtVu
niv5YovT67pm2WMsUHStNV/2OYpFpRoviSkWDB2523h08iharbZ43zXLgsHy
s7sgkIqwpd+2YIkFP29Z6cjMULEowGRgkcsC7t8BTYm+x3Bb0KldIfxsMFEz
NIicO4ZmuxbkcgXY0OWo6ukVSCDn0WjaSyE2iJ2ktV4JJvCxs9bEGM9OtDKR
gVACD16d1uLwPB+woVEzksBQoasdgsJskEteWFo+T2BFVLc98BzT2J52KY9A
gcmBviqetddaNjTdJTDEmfvcV4QNicIpqyZaCSwU2ioQwfOz9Z22m+8T6FTg
pZHEM01ac/FcJ4F44/qZUp4vUyQPGvUQyPctNLqf5x/2H56/e8/7Z3OPT+V3
NqCLlLzICIH/Xe64psVz6inrMBgl8DXpuJkBzzL+D6UrxglcunQi1IFnq0SG
uw+bwIR/gzwu8FycOtpcyiGQFtHTl8vzxKXNgoMzBM4MT+wq4zmmKK1uzwKB
0fqZz5t5/of+iOS5SCCTo7D5Ac+bqlasi34RqHyLTvTx7Hptb2XvMoGjIyvp
b3mua/Bb4HIJ5HYfafvE8/8AJDXWwQ==
                "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.455, 0.7, 0.21], 
                AbsoluteThickness[2], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.455, 0.7, 0.21], 
               AbsoluteThickness[2], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwV1nc8Fe4XB3AkqbSkQiqhQhGlSDjH3vvKjcrelVHJjKiMhKx8zZSUvrkD
IZk3W2RmZiXZV8XXzu/+/npe79f5nPN6zvPXc9Ta1ciOhYmJyYSZien/p0DU
+su0w5UKAhef3+Ui0aGQXeTIDcd0eJV75Qshhw6VXqRMYUcyVLbk74l7R4ca
CXcHNsdyENXmFNj1Lx3qIto0Fhy+wKxsKC6+pkO9bPCHaYdBaBFU+/Ukgw4N
T/vcxx3oEFz1Jqoulg6hiQn1sZJzEP4nYWEohg6nHMHsLHkOjlEK1xaf0sFj
y1Nfj7e/oHvr8NjRaDr8VZUqm3v+B2ySns3bRtCB+5OP8syTRRi+evxE1gM6
aJVu0Rtz2ADHM5/2st2mg+SG9cL+uQ1Y3NXI1uVBhwh+i2ZBOSb0PfSXI8ud
Dreti+8QqphwKQ/VFVzpoDLmVvW+gxnfSeYfNXWmw8jMNyuvhU2oa9TdcMKS
DvzrhSnr59lx/YTgZ3EtOnCl2c3t82VHl5mDJ0s06MAOe1XEy9lRtdZfWl2d
DvTAm1PX1Lfi+9U2rUsqdChjPSZbYboNa+DImqkCHa5yxHQFeXHgkYDT98Yk
6dC04/xW1qu7sbewd2PfATq0aXMmNvvtxm9M9ENu++jQHTZ7/J+U3bjv970v
tXvpMLr5tYp4/25czQ0fdN1Nh7X1A4FE8z2YvxFHeLGVDqKzy/+9u8yJKbpR
KU9WZyG0uXTU5BIXroyOTtp9m4VIjqRb/J5c6DXEOerSNwtxWp4sU/Fc6KZi
xOLaMwvpNeL8gZ1cWOQinX69cxYKytLN3xL24TnFld8qTbPwg3S/7a/RfjxJ
MKu2L5kFpSjVitf63Pj76YNOQuIsBGrlZ7fd5EaOGmlO1oRZKNssGLv+hBtz
x8d4KbGzIOvHZG/8mRsrDUXu/42chbNOH7dvaPBg6cFW6dsPZ0FIWdL0khIv
7jk0wFzhPgtsi3yzrOf4UCaTp75UfRZUch93nSbwoVXDlT0bKrMQdGOlwuwW
H04E5byRU5qFv9+7YilUPgzx88l/JzcLiy0xF66IH0Iena8tFpKzMP6W/WHe
icMoN7gStZN3FuxOr+yQ3MGPJaaiR93HZ0CnL+QV92F+jFKNn5kZnQGpkH3y
TKf5cVAnvMZueAZYByWufzHgxzueSaFqvTPwItKh4UYcP+4621bQ2DgDgzMd
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
ObUghkkUt8WNDSIaLUiGWzP8PyH6L6w=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.95, 0.627, 0.1425], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
/wBMNiue
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.455, 0.7, 0.21], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
b3mua/Bb4HIJ5HYfafvE8/8AJDXWwQ==
            "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.455, 0.7, 0.21], 
            AbsoluteThickness[2], 
            Thickness[Large]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox["\"Time\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Proportion\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Susceptible\"", "\"Zombified\"", "\"Removed\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.455, 0.7, 0.21]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9634234521993065`*^9, 3.9634235344740868`*^9, 3.96342357955818*^9, 
   3.9634236625510025`*^9, 3.963567582896492*^9, 3.963568444578579*^9, 
   3.963681087294651*^9, {3.963684519100996*^9, 3.9636845405037518`*^9}, 
   3.9637416078003807`*^9, 3.9639358594782276`*^9, 3.9640844227638607`*^9, 
   3.9640855282709904`*^9, 3.96424734928804*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"51944f2e-bd8e-734e-bc07-6b7244110016"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building a predator prey model", "Subsection",
 CellChangeTimes->{{3.9635674394039345`*^9, 
  3.9635674460102253`*^9}},ExpressionUUID->"58afae42-eb50-8f43-be6d-\
8063b38c6330"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "prey", ",", "predator", ",", "a", ",", "b", ",", "c", ",", "d", ",", 
     "t"}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Define", " ", "the", " ", "parameters", " ", "for", " ", "the", " ", 
     "predator"}], "-", 
    RowBox[{"prey", " ", "model"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Growth", " ", "rate", " ", "of", " ", "prey"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "0.02"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Predation", " ", "rate", " ", "coefficient"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Natural", " ", "death", " ", "rate", " ", "of", " ", "predators"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.01"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Rate", " ", "at", " ", "which", " ", "predators", " ", "increase", " ", 
    "by", " ", "consuming", " ", "prey"}], " ", "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Define", " ", "the", " ", "Lotka"}], "-", 
    RowBox[{"Volterra", " ", "equations"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"predatorPreyEquations", "=", 
    RowBox[{"{", "\[IndentingNewLine]", "    ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"prey", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"prey", "[", "t", "]"}]}], "-", 
        RowBox[{"b", " ", 
         RowBox[{"prey", "[", "t", "]"}], " ", 
         RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
      "\[IndentingNewLine]", "    ", 
      RowBox[{
       RowBox[{
        RowBox[{"predator", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{"c", " ", 
         RowBox[{"prey", "[", "t", "]"}], " ", 
         RowBox[{"predator", "[", "t", "]"}]}], "-", 
        RowBox[{"d", " ", 
         RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
      "\[IndentingNewLine]", "    ", 
      RowBox[{
       RowBox[{"prey", "[", "0", "]"}], "==", "0.99"}], ",", 
      "\[IndentingNewLine]", "    ", 
      RowBox[{
       RowBox[{"predator", "[", "0", "]"}], "==", "0.01"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Solve", " ", "the", " ", "predator"}], "-", 
    RowBox[{"prey", " ", "system"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"predatorPreySolution", "=", 
    RowBox[{"NDSolve", "[", "\[IndentingNewLine]", "    ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"prey", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"a", " ", 
           RowBox[{"prey", "[", "t", "]"}]}], "-", 
          RowBox[{"b", " ", 
           RowBox[{"prey", "[", "t", "]"}], " ", 
           RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", "     ", 
        RowBox[{
         RowBox[{
          RowBox[{"predator", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{"c", " ", 
           RowBox[{"prey", "[", "t", "]"}], " ", 
           RowBox[{"predator", "[", "t", "]"}]}], "-", 
          RowBox[{"d", " ", 
           RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
        "\[IndentingNewLine]", "     ", 
        RowBox[{
         RowBox[{"prey", "[", "0", "]"}], "==", "0.99"}], ",", 
        "\[IndentingNewLine]", "     ", 
        RowBox[{
         RowBox[{"predator", "[", "0", "]"}], "==", "0.01"}]}], "}"}], ",", 
      "\[IndentingNewLine]", "    ", 
      RowBox[{"{", 
       RowBox[{"prey", ",", "predator"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "the", " ", "result"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", "    ", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"prey", "[", "t", "]"}], ",", 
       RowBox[{"predator", "[", "t", "]"}]}], "}"}], " ", "/.", " ", 
     "predatorPreySolution"}], "]"}], ",", "\[IndentingNewLine]", "    ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
   "    ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Prey\>\"", ",", "\"\<Predator\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", "    ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Proportion\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", "    ", 
   RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", "    ", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Thick"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Code",
 CellTags->"ChatGeneratedCell",
 CellLabel->
  "In[151]:=",ExpressionUUID->"86782812-c00e-af4c-a001-0fc516ca0968"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.24, 0.6, 0.8], 
           Thickness[Large], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
9QFmIVr+6rvWc6UyRPgTQUkIp+EfGy871SlHhOX151pqNH4vgZdWc/JEGHio
ZmshT6A+s7iP7DlKBGTfOf4aGQJ1KCr6qNQxWr5s5fGPEgQqX6GvKKZCBEWL
wgA5MQLVevzEPkc1ItCXOl3lEyJQEwSMt0M1iBBcPPI26gCBWm2hPHtXiwjx
8WRel30E6maUyHCeDhFwAb1t5SwEqnohW0udHhEiPPcxiu/aUP3Hlz+PIjT9
jm0mfZy3ob4SGCvYxIjwsuLddf3vNtQxi5Z0fkMi8Gd6SL9usaHaFr6IxJsS
ocuv2NripQ31zvg9P08cETDfCruQZBtqg8BlpysWRIjsz9+JibSh6l620y+1
JkKsNKeskZUNNbTQULGTQAT3AyuSy2o21DfjSiJzJCJY3Mv6dEXIhnrYknVL
8gQRzpySfaUyZk1V7zbqOOhABOuMHyb2ddZU09Mxr7hPEmHp4Q2eyFfWVJ+Q
ddtdZyI4GDlcLfa1phY9/v16wIMIhAcarQ0TVtR6abm4b140fbLi5t5WWVH7
3ro7NvoQIeqmfueNdCvqds0wS4k/EUgPXqjvs7Gimv5pO30vjAgm15Jd5V/i
qfZhHJoJF4gQne5ceCECT/WhM+eIjiDCcDmX42s8nnqXt7rU7zIR+F5OMNbO
WlL79Iu4cfFEKNJPqL0sYUn1uZ1as/OACIe+upBnbM2pkQLd/608otVb+YNh
ic+ceucpd+Cf/4igxmmi9bUbR/1QnCgy8IQIzWbeF8eJOOrWcOT54hdE2AMe
/sl6ZlROr0+WBS+JIM96mDC/aEo9vLhyODuXCMw2OniuXFOqKUtAa9JrImSu
wEgqtyn1rtIZWb9iIjTl/QhN7zSmPit9su36kQj/XatQX4wxphYZDnQ6fCLC
2z3hz+mOGlP77MgxZhQi2D1VHzGINaJKRJv0S9QRgUlYvP4o7b4uajtys7+L
CH3w7UqvIEpNkqx6sdFDhHJoqnmrhVB9w+0rhftp9kuGOgJZnypx6PrKqWGa
vhksUSMxutS7/uOnf0zQ9vPH0ZXqIk2qz75M9d+rRGgrFDvCuK5INT2jacOx
ToQb85O8bs3y1MPFLd5HN2nnM7tbdjRVjtrntJURsEuEDGJ7Aa+oFNWkwGHP
MisJjvtVHtXK5qOK0/2V5NtLgi3ZQOKvAS7qFjkB1eQgQWCQpLW+NBv1/WZJ
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
8Q8y/qzlprQqGbZcX2iLpE4hDLNcOX91yGB416T5jucYkljxtGBcjwwWzz0X
nwd9R7iTVT/0ImRIdomgNKkNIanuNZ+aMDLwz590fSzUj4hr2VZSDGj1/X5u
Linbg7zaM1H/zogMTKuzg/4unYjy0PmWbBPaPPLbYhO/tCOlb1i6HpqRAUes
M2NuaUaw2EcDN8zJcOJg9PGGsEakniw3FmlJhqHp7e2Q1FrEWubTrwAr2vzW
g3mkdKuQnjXzOVcbMuzuPdQ42vAZcf46sHycSNP7/p6En3qlyOQT300cmQz2
DGysV0aLkHOBW/T6x8mw0BL5a7buPbJseJvt2AkyOPo0fbXfKkQi+cT2SziQ
ae8Bst3y/fdIS+EeR+wkGd6RdnbuDBQhYtYrz51OkaGvzro2YKoU8Z8Znb94
mgwqleK+Bh1UpCK+WffRGTJcUZFzOmFXg3BJll4rciNDz08nbRXTRsSlIrv9
21navL4teY0YtCKFJ+8Kz3vS9q2RoBd5ugNhWIvw4PAhg7qJ/MGGvG6ElOJR
eMSPDH6fHdJT6PqRbGXSlqk/GdbuqN7OdR5CjL2PJMcG0/QZ5A91fjCGXB/o
paxGkMFJXX2U1XUK6QurYeONIgNrZExEG+cMInfgLVklmgyjv/zXW0p+I02W
8dO+V8nA9adPb31pDjk4FaR+4xoZQhfIZ88bLSC+caeic66ToXLwtI8121+E
g6LON3aTDAlnStcmYheRUw7iLju3yXA6/82veI0l5M0Ke75wEhkoNenf8T+W
kJ17/1a0k2n9x544kHt9GbFR+gl2KWRooHwo5pBeQbKaWm+GPKTtu3X8+tSn
FWTBo6wnKZUMeziec781WUUMGHMOv0kjw9OWMeX2hlUkOfOe39d0Wr4PbyIF
+4f81Iv6OJVBhu0yLsJUwT9Evc+LgeUpGWoe5BdXca4hcaG2VpLZZAjr+DRb
5r6GdHNBKrwgwxSOS8HkzRoi81rh56mXtPPYfjXr28waEmYuoHQplwwRMB3z
v4qsPJ6K9wvbrjaEsqaSJElZEqXeOqlQCbkzc0cklJCUkCiFIhTKVpJEaZNs
2fJ1J1mLst57CWVJKGXJLstvfn+ez5l5z3me8zxn3vu59XJTqPKHgE/cKybk
uUnN5+pPIdlrA6W5r2n9+j/vzzCdQs6rWsQaM5jQkHy4aOWxKVRYWG45lEXj
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
md6ZQAAcGQk9Td+3j0fG6H9NpJ+P2wGzFTzUcWAJk/OYzgf5Fben8pDiM8P2
2hQChvpdtsg84CE7gWsu1c/o8z76fZe5yUOPbdgTFS8IUPfb8pR7kYe6Ciev
l6TSeF3nTfad5KG1MjriVBqt33GrDJYZD530OJfwNp2ANJ/3SYLbeejHxp6c
zGxaP2Mh10YX8JBKyJo9aTkEJGW0rljzh4tOdVt/fp5HwKc+2bu5dVzUl9D4
I7GQgAIrHb8fUVykOiXmHl9Ez4sleM/pPBc54wfnYim6HpHYqWRK3+9E30uH
l9Bxh5ydiAAXqZ2eeRxSRkDIpv5da79wkEuFnkZgBQFx/KeTIZ2Dfl9NN7pc
RfNZcsTQxoKD1Ft/Nnp9IuC32ystQ9pvrnrrbN1rCNinFjMiONCIBgYfeDs3
0H7dM2pS59+INps0CTlw6HnZWYdXGDaicy8kI215BKQs3Tput7gRDdmGvmS1
EDCaIBfNutmAtNhlW5ltdB5Ju903bEDucnwlpt8IkB0+WWnG14BG6r1a9ncR
YLy8RfenC33f2px9ak83rd/9wxNvVtYjz5t//u7sofNiO4NKPtWhcYOTS3R+
EdDXc5i4pFSHJt8c2an0lwC+l/Kr+YjPSGSbbs2yUbq/i0v5tt7+hBSL5G0Z
4wR8qHM3dy2pRsZl36/3TdHzGwkODJOuQvc5F6rT+VnQFzOvIOhRgdLJo8eS
BFkAVr7W9T7lqKRt12AkgwWKxq6x/T5l6Ff3gmUXFtF5u/RtLxxKkP7Y/aM7
JFjQYXXNzL/+P2Tqc/W3+jIWNF//sbH57FtkP2t/dZUUC8Q37VxqOZuHbjLU
H/PLsSDu4UfPVX+yUKsU9bNSkQXFRZrCNQcT0ND9x5ffKtHxiaqzqP4OEloV
LPpKmQV8zy+L4kc9kbqKuVaEKh1LnX/erhzN9tXt8sY06f6kpDetyM5i3yms
WGyozYI6dkNOtkwuO2XXqwQ9HRbIXg4SnY8oYH8y9CyW30a/f7/yueubd+yV
LOGFnbvpOLbamnmmkq3d+ut+wx6aj0dnAzydPrINj9duLNvLghC54MD1Z6vZ
Zx3jzJ4bseBDhFRn4t1aNnVR7Z6rGQtWuR8MUdPgsBv+iW04foTG19v7uBTj
snv8RgrNmSxINWI7Bvjx2GIhRd+2sFgwahvxOa67mW0TZ6oybcOCzA0g6z3w
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
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.95, 0.627, 0.1425], 
           Thickness[Large], 
           Opacity[1.], 
           Dashing[{Small, Small}], 
           LineBox[CompressedData["
1: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
FCdu/dkIwcL/ACxP4xk=
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
9QFmIVr+6rvWc6UyRPgTQUkIp+EfGy871SlHhOX151pqNH4vgZdWc/JEGHio
ZmshT6A+s7iP7DlKBGTfOf4aGQJ1KCr6qNQxWr5s5fGPEgQqX6GvKKZCBEWL
wgA5MQLVevzEPkc1ItCXOl3lEyJQEwSMt0M1iBBcPPI26gCBWm2hPHtXiwjx
8WRel30E6maUyHCeDhFwAb1t5SwEqnohW0udHhEiPPcxiu/aUP3Hlz+PIjT9
jm0mfZy3ob4SGCvYxIjwsuLddf3vNtQxi5Z0fkMi8Gd6SL9usaHaFr6IxJsS
ocuv2NripQ31zvg9P08cETDfCruQZBtqg8BlpysWRIjsz9+JibSh6l620y+1
JkKsNKeskZUNNbTQULGTQAT3AyuSy2o21DfjSiJzJCJY3Mv6dEXIhnrYknVL
8gQRzpySfaUyZk1V7zbqOOhABOuMHyb2ddZU09Mxr7hPEmHp4Q2eyFfWVJ+Q
ddtdZyI4GDlcLfa1phY9/v16wIMIhAcarQ0TVtR6abm4b140fbLi5t5WWVH7
3ro7NvoQIeqmfueNdCvqds0wS4k/EUgPXqjvs7Gimv5pO30vjAgm15Jd5V/i
qfZhHJoJF4gQne5ceCECT/WhM+eIjiDCcDmX42s8nnqXt7rU7zIR+F5OMNbO
WlL79Iu4cfFEKNJPqL0sYUn1uZ1as/OACIe+upBnbM2pkQLd/608otVb+YNh
ic+ceucpd+Cf/4igxmmi9bUbR/1QnCgy8IQIzWbeF8eJOOrWcOT54hdE2AMe
/sl6ZlROr0+WBS+JIM96mDC/aEo9vLhyODuXCMw2OniuXFOqKUtAa9JrImSu
wEgqtyn1rtIZWb9iIjTl/QhN7zSmPit9su36kQj/XatQX4wxphYZDnQ6fCLC
2z3hz+mOGlP77MgxZhQi2D1VHzGINaJKRJv0S9QRgUlYvP4o7b4uajtys7+L
CH3w7UqvIEpNkqx6sdFDhHJoqnmrhVB9w+0rhftp9kuGOgJZnypx6PrKqWGa
vhksUSMxutS7/uOnf0zQ9vPH0ZXqIk2qz75M9d+rRGgrFDvCuK5INT2jacOx
ToQb85O8bs3y1MPFLd5HN2nnM7tbdjRVjtrntJURsEuEDGJ7Aa+oFNWkwGHP
MisJjvtVHtXK5qOK0/2V5NtLgi3ZQOKvAS7qFjkB1eQgQWCQpLW+NBv1/WZJ
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
8Q8y/qzlprQqGbZcX2iLpE4hDLNcOX91yGB416T5jucYkljxtGBcjwwWzz0X
nwd9R7iTVT/0ImRIdomgNKkNIanuNZ+aMDLwz590fSzUj4hr2VZSDGj1/X5u
Linbg7zaM1H/zogMTKuzg/4unYjy0PmWbBPaPPLbYhO/tCOlb1i6HpqRAUes
M2NuaUaw2EcDN8zJcOJg9PGGsEakniw3FmlJhqHp7e2Q1FrEWubTrwAr2vzW
g3mkdKuQnjXzOVcbMuzuPdQ42vAZcf46sHycSNP7/p6En3qlyOQT300cmQz2
DGysV0aLkHOBW/T6x8mw0BL5a7buPbJseJvt2AkyOPo0fbXfKkQi+cT2SziQ
ae8Bst3y/fdIS+EeR+wkGd6RdnbuDBQhYtYrz51OkaGvzro2YKoU8Z8Znb94
mgwqleK+Bh1UpCK+WffRGTJcUZFzOmFXg3BJll4rciNDz08nbRXTRsSlIrv9
21navL4teY0YtCKFJ+8Kz3vS9q2RoBd5ugNhWIvw4PAhg7qJ/MGGvG6ElOJR
eMSPDH6fHdJT6PqRbGXSlqk/GdbuqN7OdR5CjL2PJMcG0/QZ5A91fjCGXB/o
paxGkMFJXX2U1XUK6QurYeONIgNrZExEG+cMInfgLVklmgyjv/zXW0p+I02W
8dO+V8nA9adPb31pDjk4FaR+4xoZQhfIZ88bLSC+caeic66ToXLwtI8121+E
g6LON3aTDAlnStcmYheRUw7iLju3yXA6/82veI0l5M0Ke75wEhkoNenf8T+W
kJ17/1a0k2n9x544kHt9GbFR+gl2KWRooHwo5pBeQbKaWm+GPKTtu3X8+tSn
FWTBo6wnKZUMeziec781WUUMGHMOv0kjw9OWMeX2hlUkOfOe39d0Wr4PbyIF
+4f81Iv6OJVBhu0yLsJUwT9Evc+LgeUpGWoe5BdXca4hcaG2VpLZZAjr+DRb
5r6GdHNBKrwgwxSOS8HkzRoi81rh56mXtPPYfjXr28waEmYuoHQplwwRMB3z
v4qsPJ6K9wvbrjaEsqaSJElZEqXeOqlQCbkzc0cklJCUkCiFIhTKVpJEaZNs
2fJ1J1mLst57CWVJKGXJLstvfn+ez5l5z3me8zxn3vu59XJTqPKHgE/cKybk
uUnN5+pPIdlrA6W5r2n9+j/vzzCdQs6rWsQaM5jQkHy4aOWxKVRYWG45lEXj
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
md6ZQAAcGQk9Td+3j0fG6H9NpJ+P2wGzFTzUcWAJk/OYzgf5Fben8pDiM8P2
2hQChvpdtsg84CE7gWsu1c/o8z76fZe5yUOPbdgTFS8IUPfb8pR7kYe6Ciev
l6TSeF3nTfad5KG1MjriVBqt33GrDJYZD530OJfwNp2ANJ/3SYLbeejHxp6c
zGxaP2Mh10YX8JBKyJo9aTkEJGW0rljzh4tOdVt/fp5HwKc+2bu5dVzUl9D4
I7GQgAIrHb8fUVykOiXmHl9Ez4sleM/pPBc54wfnYim6HpHYqWRK3+9E30uH
l9Bxh5ydiAAXqZ2eeRxSRkDIpv5da79wkEuFnkZgBQFx/KeTIZ2Dfl9NN7pc
RfNZcsTQxoKD1Ft/Nnp9IuC32ystQ9pvrnrrbN1rCNinFjMiONCIBgYfeDs3
0H7dM2pS59+INps0CTlw6HnZWYdXGDaicy8kI215BKQs3Tput7gRDdmGvmS1
EDCaIBfNutmAtNhlW5ltdB5Ju903bEDucnwlpt8IkB0+WWnG14BG6r1a9ncR
YLy8RfenC33f2px9ak83rd/9wxNvVtYjz5t//u7sofNiO4NKPtWhcYOTS3R+
EdDXc5i4pFSHJt8c2an0lwC+l/Kr+YjPSGSbbs2yUbq/i0v5tt7+hBSL5G0Z
4wR8qHM3dy2pRsZl36/3TdHzGwkODJOuQvc5F6rT+VnQFzOvIOhRgdLJo8eS
BFkAVr7W9T7lqKRt12AkgwWKxq6x/T5l6Ff3gmUXFtF5u/RtLxxKkP7Y/aM7
JFjQYXXNzL/+P2Tqc/W3+jIWNF//sbH57FtkP2t/dZUUC8Q37VxqOZuHbjLU
H/PLsSDu4UfPVX+yUKsU9bNSkQXFRZrCNQcT0ND9x5ffKtHxiaqzqP4OEloV
LPpKmQV8zy+L4kc9kbqKuVaEKh1LnX/erhzN9tXt8sY06f6kpDetyM5i3yms
WGyozYI6dkNOtkwuO2XXqwQ9HRbIXg4SnY8oYH8y9CyW30a/f7/yueubd+yV
LOGFnbvpOLbamnmmkq3d+ut+wx6aj0dnAzydPrINj9duLNvLghC54MD1Z6vZ
Zx3jzJ4bseBDhFRn4t1aNnVR7Z6rGQtWuR8MUdPgsBv+iW04foTG19v7uBTj
snv8RgrNmSxINWI7Bvjx2GIhRd+2sFgwahvxOa67mW0TZ6oybcOCzA0g6z3w
lT1f4J574ywLLOs+RvgHdbPbhLNvPXZjwXO9RE8v7Ae7EBu2o9xZYCy4nduu
0sP2HDonNu7FghlZE3M1Xi+7b72ro4MfC3RDMzVdjvezG+46yu27Q9dr0Th6
8eIw+6mn9RX+bBYUVDvX7Ngzxb5W8oC5MocF/2Qq1PKKpti24q0btuexQP/K
kHax3jRbPs2S51bIguzqaUUz9X/siO+ERkcJC0wkRl36RWfZ3hZHOqlGFtz/
N061MPkoPOlOfguX1oPZnNSCW3yU9kBt+HgTPQ/l6xNR7/moP6Gm+pvbWFD7
R80oQ52fsn9/KPphNwsOGU3H7J3mp3YvveX8tofG93v0v9yNApTCsard3D5a
PyYFRkxrAYo3afxb5A8Lln6hLo0XClCHNA33+46xwMazoUrFVZDi43L5PSdY
wPHC9C/ECFJ5Pg6UyxQLDntxr38tFKSUSgP1rGZZkLwk6EKPkBDV7Lh81GKe
BXuHl9zwVRWiIkRSMg/yk3DKw2CPzCEhahov3aDPIIH6fTZkf7gQlTlt0aO1
gISiLWzfmjQh6tSjrscbFpFQlefy27BaiGro41eQEyUhVTxebFiIQYWERzaL
LyVhv577BllFBrVLe03sQgkS/Ldb3ZHTZ1Cpl0FscjkJrm7iy+6eZlC2inVV
g9Ik9Izq3BMOYFDS5ceDe2VJiByV37bzLoP65Dy4t12eBOa9gZdaqQzqmpgf
X5MCCWKMtqTOIga17Y0Yu2YVCS8cltYb1jCoAVaiT4UiCYzOnAGrbwwqZWaT
LqVEwsJHk69X/GFQR5PZf3OVSbhbKVzqP82gxA0PZ7xWISH62pKuIGFhquJX
m8tTVRK+T2i/WychTPnePqP6UI0EF7OXYlbywpS2zkx3jDoJolnxgYpKwlRf
863ksM0kZOzbwnVTFaYSr6ywCdQkYav2oxzDTcIUpvRK3lebhGvJi5sSNIWp
RZX6TR46JFwqTB5y1RamKJeqaBddEoSe3snNoWNP8aPmJ7aRIBgq2OKiJUyp
5f4UsdInwTJCRTJiszDVYenz0WInCb/b1klKqwlTd+cW3ji4i4SkhE0Rc2uF
KZMncQYGQAI55qxvoCBMCRirzm83IGGlo2HbkKQwVfA7/z+tfST03ewaCl8o
TJ2NNPLeYEifn7uQ1J5lUMq6TTprjEkQOdZ5qX2IQbW0nBqWPUjCg8mYkrvf
GdQdv/HX4iYkPJs7FGfJZVCGyjdOLzQloeLHZocNFQxq5oPUej5zEuKUT0Ut
yGNQTpJbkwaZJJRf98gejWJQq/LLrHtxur/I+IvC/gyKY4XJtbNoPuvz96if
YVDw1COqxoqEI++9Qt/uYVDjBwTNKo6RIHvc+cvajQwqbSBqCXWcBPdFow3P
lzEo2W3Zga9PkGBh4+Eo0CVE1bTt2fPUgYSl4wWc1kohKjCgfjbBkYQ6z213
OLR+h6qGvMJc6Jg/+O4GTyGq8piGs4sHCb0Wtbahk4KU5Amn/x5eIGF4yQXO
o0ZBysYpWbTuIgnpARfC014LUuPuy7J1fGk/LJN6mWkjSCmHTEzPBpJg0P3G
Jz5HgHIL1zysGUyCaezyJfHBAtR/Uc6P7ENJeP/9d8wjSwHK4mHr3spwEmo+
RLmU0f73z34XducuCSXlcTJpWvzUp/zJbyVxJBh5PDguOctHybC1tMbiSShL
1GZGVPJR6ZVPuJaPSAhqT5OuteSjvrYFr1r7goRSnTOCRO8cW3+BeWbuWxL+
Wxwyt2B2mn1DJFSg7z9a/+5+c7be0+x6iRJMnqL1yFqmpPx3iu2koDN1tYTW
v++m4MmOSfY9LVkD42oSCphj6UZp4+xRq47GljZaD4Tyk4GZYTbYyamIttP9
/N7fUmw7zL51ysJ7dyft3+sX+XeWDrGVzpcppPyg9bHO7JnPwkH2kRsvHFwH
6PqZixvT/vxkJ9zqzH80RMKX9V2iRUl97L478osb/pIQsubwmNWRXrb/g7B0
3QkSjh+T0XR91c3+lFTO5zxFwjL/aN0B7Dtb5tmcxYN/JIz2tJmtnulk27/S
e/p5lt4//Nfwhckd7PRMt4n5eRLYfkoG9sHf2P8DiKO5sg==
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
FCdu/dkIwcL/ACxP4xk=
                "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2], 
                Dashing[{Small, Small}], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.95, 0.627, 0.1425], 
               AbsoluteThickness[2], 
               Dashing[{Small, Small}], 
               Thickness[Large]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
9QFmIVr+6rvWc6UyRPgTQUkIp+EfGy871SlHhOX151pqNH4vgZdWc/JEGHio
ZmshT6A+s7iP7DlKBGTfOf4aGQJ1KCr6qNQxWr5s5fGPEgQqX6GvKKZCBEWL
wgA5MQLVevzEPkc1ItCXOl3lEyJQEwSMt0M1iBBcPPI26gCBWm2hPHtXiwjx
8WRel30E6maUyHCeDhFwAb1t5SwEqnohW0udHhEiPPcxiu/aUP3Hlz+PIjT9
jm0mfZy3ob4SGCvYxIjwsuLddf3vNtQxi5Z0fkMi8Gd6SL9usaHaFr6IxJsS
ocuv2NripQ31zvg9P08cETDfCruQZBtqg8BlpysWRIjsz9+JibSh6l620y+1
JkKsNKeskZUNNbTQULGTQAT3AyuSy2o21DfjSiJzJCJY3Mv6dEXIhnrYknVL
8gQRzpySfaUyZk1V7zbqOOhABOuMHyb2ddZU09Mxr7hPEmHp4Q2eyFfWVJ+Q
ddtdZyI4GDlcLfa1phY9/v16wIMIhAcarQ0TVtR6abm4b140fbLi5t5WWVH7
3ro7NvoQIeqmfueNdCvqds0wS4k/EUgPXqjvs7Gimv5pO30vjAgm15Jd5V/i
qfZhHJoJF4gQne5ceCECT/WhM+eIjiDCcDmX42s8nnqXt7rU7zIR+F5OMNbO
WlL79Iu4cfFEKNJPqL0sYUn1uZ1as/OACIe+upBnbM2pkQLd/608otVb+YNh
ic+ceucpd+Cf/4igxmmi9bUbR/1QnCgy8IQIzWbeF8eJOOrWcOT54hdE2AMe
/sl6ZlROr0+WBS+JIM96mDC/aEo9vLhyODuXCMw2OniuXFOqKUtAa9JrImSu
wEgqtyn1rtIZWb9iIjTl/QhN7zSmPit9su36kQj/XatQX4wxphYZDnQ6fCLC
2z3hz+mOGlP77MgxZhQi2D1VHzGINaJKRJv0S9QRgUlYvP4o7b4uajtys7+L
CH3w7UqvIEpNkqx6sdFDhHJoqnmrhVB9w+0rhftp9kuGOgJZnypx6PrKqWGa
vhksUSMxutS7/uOnf0zQ9vPH0ZXqIk2qz75M9d+rRGgrFDvCuK5INT2jacOx
ToQb85O8bs3y1MPFLd5HN2nnM7tbdjRVjtrntJURsEuEDGJ7Aa+oFNWkwGHP
MisJjvtVHtXK5qOK0/2V5NtLgi3ZQOKvAS7qFjkB1eQgQWCQpLW+NBv1/WZJ
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
8Q8y/qzlprQqGbZcX2iLpE4hDLNcOX91yGB416T5jucYkljxtGBcjwwWzz0X
nwd9R7iTVT/0ImRIdomgNKkNIanuNZ+aMDLwz590fSzUj4hr2VZSDGj1/X5u
Linbg7zaM1H/zogMTKuzg/4unYjy0PmWbBPaPPLbYhO/tCOlb1i6HpqRAUes
M2NuaUaw2EcDN8zJcOJg9PGGsEakniw3FmlJhqHp7e2Q1FrEWubTrwAr2vzW
g3mkdKuQnjXzOVcbMuzuPdQ42vAZcf46sHycSNP7/p6En3qlyOQT300cmQz2
DGysV0aLkHOBW/T6x8mw0BL5a7buPbJseJvt2AkyOPo0fbXfKkQi+cT2SziQ
ae8Bst3y/fdIS+EeR+wkGd6RdnbuDBQhYtYrz51OkaGvzro2YKoU8Z8Znb94
mgwqleK+Bh1UpCK+WffRGTJcUZFzOmFXg3BJll4rciNDz08nbRXTRsSlIrv9
21navL4teY0YtCKFJ+8Kz3vS9q2RoBd5ugNhWIvw4PAhg7qJ/MGGvG6ElOJR
eMSPDH6fHdJT6PqRbGXSlqk/GdbuqN7OdR5CjL2PJMcG0/QZ5A91fjCGXB/o
paxGkMFJXX2U1XUK6QurYeONIgNrZExEG+cMInfgLVklmgyjv/zXW0p+I02W
8dO+V8nA9adPb31pDjk4FaR+4xoZQhfIZ88bLSC+caeic66ToXLwtI8121+E
g6LON3aTDAlnStcmYheRUw7iLju3yXA6/82veI0l5M0Ke75wEhkoNenf8T+W
kJ17/1a0k2n9x544kHt9GbFR+gl2KWRooHwo5pBeQbKaWm+GPKTtu3X8+tSn
FWTBo6wnKZUMeziec781WUUMGHMOv0kjw9OWMeX2hlUkOfOe39d0Wr4PbyIF
+4f81Iv6OJVBhu0yLsJUwT9Evc+LgeUpGWoe5BdXca4hcaG2VpLZZAjr+DRb
5r6GdHNBKrwgwxSOS8HkzRoi81rh56mXtPPYfjXr28waEmYuoHQplwwRMB3z
v4qsPJ6K9wvbrjaEsqaSJElZEqXeOqlQCbkzc0cklJCUkCiFIhTKVpJEaZNs
2fJ1J1mLst57CWVJKGXJLstvfn+ez5l5z3me8zxn3vu59XJTqPKHgE/cKybk
uUnN5+pPIdlrA6W5r2n9+j/vzzCdQs6rWsQaM5jQkHy4aOWxKVRYWG45lEXj
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
md6ZQAAcGQk9Td+3j0fG6H9NpJ+P2wGzFTzUcWAJk/OYzgf5Fben8pDiM8P2
2hQChvpdtsg84CE7gWsu1c/o8z76fZe5yUOPbdgTFS8IUPfb8pR7kYe6Ciev
l6TSeF3nTfad5KG1MjriVBqt33GrDJYZD530OJfwNp2ANJ/3SYLbeejHxp6c
zGxaP2Mh10YX8JBKyJo9aTkEJGW0rljzh4tOdVt/fp5HwKc+2bu5dVzUl9D4
I7GQgAIrHb8fUVykOiXmHl9Ez4sleM/pPBc54wfnYim6HpHYqWRK3+9E30uH
l9Bxh5ydiAAXqZ2eeRxSRkDIpv5da79wkEuFnkZgBQFx/KeTIZ2Dfl9NN7pc
RfNZcsTQxoKD1Ft/Nnp9IuC32ystQ9pvrnrrbN1rCNinFjMiONCIBgYfeDs3
0H7dM2pS59+INps0CTlw6HnZWYdXGDaicy8kI215BKQs3Tput7gRDdmGvmS1
EDCaIBfNutmAtNhlW5ltdB5Ju903bEDucnwlpt8IkB0+WWnG14BG6r1a9ncR
YLy8RfenC33f2px9ak83rd/9wxNvVtYjz5t//u7sofNiO4NKPtWhcYOTS3R+
EdDXc5i4pFSHJt8c2an0lwC+l/Kr+YjPSGSbbs2yUbq/i0v5tt7+hBSL5G0Z
4wR8qHM3dy2pRsZl36/3TdHzGwkODJOuQvc5F6rT+VnQFzOvIOhRgdLJo8eS
BFkAVr7W9T7lqKRt12AkgwWKxq6x/T5l6Ff3gmUXFtF5u/RtLxxKkP7Y/aM7
JFjQYXXNzL/+P2Tqc/W3+jIWNF//sbH57FtkP2t/dZUUC8Q37VxqOZuHbjLU
H/PLsSDu4UfPVX+yUKsU9bNSkQXFRZrCNQcT0ND9x5ffKtHxiaqzqP4OEloV
LPpKmQV8zy+L4kc9kbqKuVaEKh1LnX/erhzN9tXt8sY06f6kpDetyM5i3yms
WGyozYI6dkNOtkwuO2XXqwQ9HRbIXg4SnY8oYH8y9CyW30a/f7/yueubd+yV
LOGFnbvpOLbamnmmkq3d+ut+wx6aj0dnAzydPrINj9duLNvLghC54MD1Z6vZ
Zx3jzJ4bseBDhFRn4t1aNnVR7Z6rGQtWuR8MUdPgsBv+iW04foTG19v7uBTj
snv8RgrNmSxINWI7Bvjx2GIhRd+2sFgwahvxOa67mW0TZ6oybcOCzA0g6z3w
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
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.95, 0.627, 0.1425], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}], 
            Thickness[Large]], 
           Line[CompressedData["
1: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
FCdu/dkIwcL/ACxP4xk=
            "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.95, 0.627, 0.1425], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}], 
            Thickness[Large]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox["\"Time\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Proportion\"", HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Prey\"", "\"Predator\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.963424148026079*^9, 3.963568447320261*^9, 
  3.963741608218422*^9, 3.9639358598095512`*^9, 3.9640844230919895`*^9, 
  3.9640855286288815`*^9, 3.9642473493875504`*^9},
 CellTags->"ChatGeneratedCell",
 CellLabel->
  "Out[158]=",ExpressionUUID->"88575c41-daf1-f145-ae30-b7ec4cc01c4f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Unifying the SIR and predator prey model", "Subsection",
 CellChangeTimes->{{3.963567465248413*^9, 
  3.9635674814323826`*^9}},ExpressionUUID->"0fa57715-4797-e04c-a955-\
5d8c8375e428"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "S", ",", "Z", ",", "R", ",", "prey", ",", "predator", ",", "a", ",", "b",
      ",", "c", ",", "d", ",", "beta", ",", "gamma", ",", "t"}], "]"}], ";"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Parameters", " ", "for", " ", "SIR", " ", "model"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"beta", "=", "0.3"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Infection", " ", "rate"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gamma", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Recovery", " ", "rate"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Parameters", " ", "for", " ", "predator"}], "-", 
    RowBox[{"prey", " ", "model"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Growth", " ", "rate", " ", "of", " ", "prey"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "0.02"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Predation", " ", "rate", " ", "coefficient"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "=", "0.1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Natural", " ", "death", " ", "rate", " ", "of", " ", "predators"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "0.01"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Rate", " ", "at", " ", "which", " ", "predators", " ", "increase", " ", 
    "by", " ", "consuming", " ", "prey"}], " ", "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Define", " ", "interactions", " ", "between", " ", "models"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interactionRate", "=", "0.01"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", "interaction", " ", "rate"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Combined", " ", "differential", " ", "equations"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"combinedEquations", "=", 
    RowBox[{"{", "\[IndentingNewLine]", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"S", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{"-", "beta"}], " ", 
        RowBox[{"S", "[", "t", "]"}], " ", 
        RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"Z", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{"beta", " ", 
         RowBox[{"S", "[", "t", "]"}], " ", 
         RowBox[{"Z", "[", "t", "]"}]}], "-", 
        RowBox[{"gamma", " ", 
         RowBox[{"Z", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "'"}], "[", "t", "]"}], "==", 
       RowBox[{"gamma", " ", 
        RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", "  ", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"prey", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{"c", " ", 
         RowBox[{"prey", "[", "t", "]"}]}], "-", 
        RowBox[{"b", " ", 
         RowBox[{"prey", "[", "t", "]"}], " ", 
         RowBox[{"predator", "[", "t", "]"}]}], "-", 
        RowBox[{"interactionRate", " ", 
         RowBox[{"Z", "[", "t", "]"}], " ", 
         RowBox[{"prey", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
      "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"predator", "'"}], "[", "t", "]"}], "==", 
       RowBox[{
        RowBox[{"c", " ", 
         RowBox[{"prey", "[", "t", "]"}], " ", 
         RowBox[{"predator", "[", "t", "]"}]}], "-", 
        RowBox[{"d", " ", 
         RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
      "\[IndentingNewLine]", "  ", "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"S", "[", "0", "]"}], "==", "0.99"}], ",", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"Z", "[", "0", "]"}], "==", "0.01"}], ",", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"R", "[", "0", "]"}], "==", "0"}], ",", "\[IndentingNewLine]", 
      "  ", 
      RowBox[{
       RowBox[{"prey", "[", "0", "]"}], "==", "0.99"}], ",", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"predator", "[", "0", "]"}], "==", "0.01"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Solve", " ", "the", " ", "system"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solution", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"combinedEquations", ",", 
      RowBox[{"{", 
       RowBox[{"S", ",", "Z", ",", "R", ",", "prey", ",", "predator"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "the", " ", "results"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sirPlot", " ", "=", "\n", "  ", 
    RowBox[{"Plot", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ",", " ", 
          RowBox[{"Z", "[", "t", "]"}], ",", " ", 
          RowBox[{"R", "[", "t", "]"}]}], "}"}], " ", "/.", " ", "solution"}],
        "]"}], ",", "\n", "    ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", "\n", 
      "    ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Susceptible\>\"", ",", " ", "\"\<Infected\>\"", ",", 
         " ", "\"\<Recovered\>\""}], "}"}]}], ",", "\n", "    ", 
      RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
      RowBox[{"FrameLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", " ", "\"\<Proportion\>\""}], "}"}]}], ",",
       "\n", "    ", 
      RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
      RowBox[{"PlotStyle", " ", "->", " ", "Thick"}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "450"}]}], "\n", "  ", "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Ecology", " ", "plot", " ", 
    RowBox[{"(", 
     RowBox[{"absolute", " ", "units"}], ")"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ecoPlot", " ", "=", "\n", "  ", 
    RowBox[{"Plot", "[", "\n", "    ", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"prey", "[", "t", "]"}], ",", " ", 
          RowBox[{"predator", "[", "t", "]"}]}], "}"}], " ", "/.", " ", 
        "solution"}], "]"}], ",", "\n", "    ", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", "\n", 
      "    ", 
      RowBox[{"PlotLegends", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Prey\>\"", ",", " ", "\"\<Predator\>\""}], "}"}]}], ",", 
      "\n", "    ", 
      RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
      RowBox[{"FrameLabel", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", " ", "\"\<Population (arb. units)\>\""}],
         "}"}]}], ",", "\n", "    ", 
      RowBox[{"PlotRange", " ", "->", " ", "All"}], ",", " ", 
      RowBox[{"PlotStyle", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", " ", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", " ", "Dashed"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "->", " ", "450"}]}], "\n", "  ", "]"}]}], 
   ";"}], "\n", "  "}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sirPlot", ",", " ", "ecoPlot"}], "}"}], ",", " ", 
   RowBox[{"Spacings", " ", "->", " ", 
    RowBox[{"Scaled", "[", ".6", "]"}]}], ",", " ", 
   RowBox[{"ImageSize", " ", "->", " ", "950"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.9637724338605537`*^9, 3.96377258348761*^9}, {
  3.9637726410304604`*^9, 3.963772648338867*^9}},
 CellTags->"ChatGeneratedCell",
 CellLabel->
  "In[159]:=",ExpressionUUID->"e1ab3e7b-1f31-5a4a-b6b4-b46492e079f9"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{
       GraphicsBox[
        InterpretationBox[{
          TagBox[{{{}, {}, 
             TagBox[{
               RGBColor[0.24, 0.6, 0.8], 
               Thickness[Large], 
               Opacity[1.], 
               LineBox[CompressedData["
1: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
Ho5TwU39+14FXemGEo3oYyqZKrj1Hff4mmE3ONUmNljXqyB1PFI0Uqgbuouz
R2LZVLHv92m7oIAuyMpoElq8p4q/54tCxXZ0QtpZmY+WKaqYdldINfNfB6Tu
SbpfkqGK8YbiJXKTHRCXcoHdm6yKhs+1UmOqOsA/7h99tlsV6yJOPVFy7ADz
IPk3YzsBu/LyQh0b3gHr+XTnzv8AYxpyhMIi38LGXlYx2aeAHVbnOG76voWV
AZevMS8AL9YGNAdffAvzlooWelWAVy/2hLYqvYUhoz7lxiFAh/Rbuid/tsPn
DFbOL9sQb+13cwiza4fiuNODveaI9wXUbnrqtcGlxzxslVaIFUp+lm9OtQFv
/phclg1izP7yCTHpNvCsj77jcQlRanPx9E6uNpBZ+CzF7Y1oVeVz6klHK+Sc
CfDTuo9YbkXd6WjZCsli1bsquhBNTOROET1aQEM+ATL7EL3Y4snOF1vgl4q9
c8RHxEvsfhZ3LVrA1Jq7hjCMqJgUsTB7sgW4o8/a/6QhXnbdbmrO3AJh9NUi
aR41rCTXSoWmNINvpYppuqEaqrOUF8q0N0GpTQvLgKka7hg6N1Jf3QR/V0xL
+SzV0J9uPWZPboKbSvZ7Ys+p4bjo2t7+5CYIqo6e8L+qhiGTIkOWF5ogsvaj
HzFBDS34Ej0+LzfCowavrJ39aphIPsUWdaIRBi/9szD5pIZsAdSUGulGENoU
zh4zpIaG/H666/sbIUMj1ZXlmxrWH/YbyOZohOzG2uM//6jh/NGvBkEDb6Cg
mau9k18d46pTw67cfgOv23N/Rdmq4+oes1fP+hqgSKDb65adOoY27/251NYA
OQ4r856X1VG+M93Roq4BollM6Nau6sjVZDIjWtgAhNNLM4cC1DHlwDOjo5EN
MP1c/1v9I3UkeBjeXVVuAL4o+sflAXUs7fmvjpNcD+wfBa3nvqhjBrXW3TOv
HpbFND+MjKojZ64CjqTXw9e61P6WHwzLth/7FFsPz5fUeh4sq+P87mI3Sdd6
UHVKbpcX1MD88JhtGlL14KxzqsaZqIFHbW5ySL+sA5qkYBP1rAYqW611jD+t
A+8ty++WL2ig3Ye+tdxHdRDYUTEU5ayBm+ImfDWi6yDBQnH1ub8Ghpdb1Y86
10GZ3Uml6TQNzO3mH8qWrgMWv+OvXEY1MP33xjCT/WuIPLOrvuibBsozDSi6
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
                "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
             TagBox[{
               RGBColor[0.95, 0.627, 0.1425], 
               Thickness[Large], 
               Opacity[1.], 
               LineBox[CompressedData["
1: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
pD6m4Fa1lVPGbAvW6g0FdFDwtidzSojtK+XpQRYEBYWWzsn2s+uXLvjGpTRA
QZlN+RcT2S7L2nmZ9yMFwyffmWizrZGWqfj5GwW5a5+avmL3pzFhsuHRLwry
c8xd82fbKNrYMm+e3S8/Pts5dr+7Q3OGTnJSUencuYBwtu0D/wQxVlHx4uyW
2Sn2+wx6m3OThaho88Zxzplt5v7rl0XEqbixiu9Esx8BU/Zzin+2UpFarxC3
gW1O42LLSnUqfvpW41zIzkMSbWkomUzFpHfilHfs/Ahr2R313UlF1rlvrSvZ
lpNdkSlnRcXkqu28xuz8mXDuH74aSEXTlo2Ghuy89s3dORoWSsWxOt8LSuw8
O/0U4HGIomKpVks/Dzvvh4buKwldoGLCeV6/fPY8pDSLBMdXUvGlZOzn/Y4E
bLzrz+NVR8UJq2yOGfa85d1qzTR4QEXLosvuMfYEVGcHNS11U/H39v1bT9sQ
0B/ezXNsgoo76O45q/YQ4BIkd8V6moq2eR0cdubsvPlE/Ke2REUD6fqFS6YE
zNCV9n1frYe7wuiD/4wIENeJu+K2XQ8rz9mF0vUJOPCbpmzpp4e6NvwbXdn7
aLUQqbc/WA+ZtFq3z0rsPKo9Oso4qYcpwQruB9n7TDjAuIGZooe0loUWmgwB
z75amp2p0kODqeteJ0QJUPuwn1n/Rw/z71UyN3MQ8H5hqwAs6mEnzfIC7xIL
EiU+VbZx0/CT8lnzL/Ms+ERnzrBEaJjSn1SbyN7XmURg3LguDeNbOl8f/MIC
0vPoQumTNIyu1Kj06GD/B18MTEpjabghZmt+01MWOPHw/FBNoeG5In7eNa0s
qDVI1KBdo+GbCi7vS40sYDanPXJ4SMO3o10kvMWC3pqCoWRufczXChwWPMeC
/Nw2yZlz+ij7sW+WczcLsp2VX9ll6OO+vw7yJ3ax6xFPT63N1cefvJFtP2gs
SMk4wBNUqY+5Tj4xjZosCE/5N/mjVx8TFyyC10qzwPqU+uOR9YDF+1mUlH99
wOWa49N9BVD8H/ea3WV9UJNCGWBZI1LXvj+2e64Xgu/T9uVY7ES7zKtavKI9
8KD9xq8Exi5U2PLwsBirA3x2k5t86Ab4geei7b1nzyC7RP3OIV9DtGN0dukV
tUHq76bowONGCJ9PLox0P4LRsmMhzCBjlNC8ZSHv3QKtxmmZp0/vxpg655xA
uUbg2Pt25HyUCQb7iP5wsqwH0s67HHlhpiinktU0t1gL8Rtn9rDOmqH+7GCx
1btqCHRyfzRzxhyfutZyF5RWwHC0pgdcssCVK0LHeqZKQTj9ytuE/D24ubg6
dce/G1AkqBT29Koltrby62X1XoeHQVuM5Mv3ooLtyzGpR9cgVypPkma7D5Xk
5+XJIlehKWKexOzdh0apVV4WipdhqznvgoyDFZ7/xOEnG58OtT2KSW/6rTBz
9i5pW/EFSH6ypCblYo3K+z/wT3AkQ/rRMd8D76yRJpP2iNR3FiI2bF4r7WiD
e6er9V/vjYFSRe724CEbjH0xtMZcJBp4/nCIPXS1xXGpH7LZ609CsVr1qdwv
thjt7Lpa0zsUFA+WWS7622G/L3NQIikYBkzv3bb7boflghIee08dAVZB+HY4
ao+XFg6ahrj7w2yNlZ70L3uUMuG1bp1lwnJ90J24AAfseJK4yGnqCeZqxkYR
fx1wTbYp0fzZDZ66qPocOkrHQ2Or/iQFuYKQO7Mh5xgd28+XbU93dgVXZv7q
3uN0HFhYpJQZu8J00PrbmhF0JMyEi3glXEE2fmZ+MYaO19PN00+1ukDU7QfJ
FzLoOP/YPNhG3AUovPuq7tyjo8DC8wLLPgbECSRwfm2gY05nfgm1iQF96x7Z
ijfTkc+t+z+dUgYwJTXnTj2i49ifsNOO0Qy4rC66y6SDjh5F3sZmOxjwhzFE
vH1HR5IkF8HKcAJ0E9u2epCOJR9WNF0/4wRJXtahMEzHmo8l4VGBTiB9pFWy
8DMdg/u1jT3NnMAqrsTTf4KO/6lU/mYtOUJ20nDdtSk6yg7L7RP84QhfL4iv
Yv2i450N35QYbxwh6mpyhfYMHR1lKtXEah2hM6+N5DNHR5qAk3FyviNsLFqy
vvqPjv4ZRZUC5x3hYLnOja5FOj57PuaWFeEIFVWBM8vLdFSpCLXW8nWE/wF2
oSE4
                "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
             TagBox[{
               RGBColor[0.455, 0.7, 0.21], 
               Thickness[Large], 
               Opacity[1.], 
               LineBox[CompressedData["
1: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
qfNZXFsjsNdmqn+a7f8BXNXQXQ==
                "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
           "WolframDynamicHighlight", <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
          StyleBox[
           DynamicBox[
            (Charting`HighlightActionBox["DynamicHighlight", {}, 
             Slot["HighlightElements"], 
             Slot["LayoutOptions"], 
             Slot["Meta"], 
             Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
                 Annotation[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], 
                   Line[CompressedData["
1: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
Ho5TwU39+14FXemGEo3oYyqZKrj1Hff4mmE3ONUmNljXqyB1PFI0Uqgbuouz
R2LZVLHv92m7oIAuyMpoElq8p4q/54tCxXZ0QtpZmY+WKaqYdldINfNfB6Tu
SbpfkqGK8YbiJXKTHRCXcoHdm6yKhs+1UmOqOsA/7h99tlsV6yJOPVFy7ADz
IPk3YzsBu/LyQh0b3gHr+XTnzv8AYxpyhMIi38LGXlYx2aeAHVbnOG76voWV
AZevMS8AL9YGNAdffAvzlooWelWAVy/2hLYqvYUhoz7lxiFAh/Rbuid/tsPn
DFbOL9sQb+13cwiza4fiuNODveaI9wXUbnrqtcGlxzxslVaIFUp+lm9OtQFv
/phclg1izP7yCTHpNvCsj77jcQlRanPx9E6uNpBZ+CzF7Y1oVeVz6klHK+Sc
CfDTuo9YbkXd6WjZCsli1bsquhBNTOROET1aQEM+ATL7EL3Y4snOF1vgl4q9
c8RHxEvsfhZ3LVrA1Jq7hjCMqJgUsTB7sgW4o8/a/6QhXnbdbmrO3AJh9NUi
aR41rCTXSoWmNINvpYppuqEaqrOUF8q0N0GpTQvLgKka7hg6N1Jf3QR/V0xL
+SzV0J9uPWZPboKbSvZ7Ys+p4bjo2t7+5CYIqo6e8L+qhiGTIkOWF5ogsvaj
HzFBDS34Ej0+LzfCowavrJ39aphIPsUWdaIRBi/9szD5pIZsAdSUGulGENoU
zh4zpIaG/H666/sbIUMj1ZXlmxrWH/YbyOZohOzG2uM//6jh/NGvBkEDb6Cg
mau9k18d46pTw67cfgOv23N/Rdmq4+oes1fP+hqgSKDb65adOoY27/251NYA
OQ4r856X1VG+M93Roq4BollM6Nau6sjVZDIjWtgAhNNLM4cC1DHlwDOjo5EN
MP1c/1v9I3UkeBjeXVVuAL4o+sflAXUs7fmvjpNcD+wfBa3nvqhjBrXW3TOv
HpbFND+MjKojZ64CjqTXw9e61P6WHwzLth/7FFsPz5fUeh4sq+P87mI3Sdd6
UHVKbpcX1MD88JhtGlL14KxzqsaZqIFHbW5ySL+sA5qkYBP1rAYqW611jD+t
A+8ty++WL2ig3Ye+tdxHdRDYUTEU5ayBm+ImfDWi6yDBQnH1ub8Ghpdb1Y86
10GZ3Uml6TQNzO3mH8qWrgMWv+OvXEY1MP33xjCT/WuIPLOrvuibBsozDSi6
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
                    "]]}, "Charting`Private`Tag#1"], 
                 Annotation[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], 
                   Line[CompressedData["
1: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
pD6m4Fa1lVPGbAvW6g0FdFDwtidzSojtK+XpQRYEBYWWzsn2s+uXLvjGpTRA
QZlN+RcT2S7L2nmZ9yMFwyffmWizrZGWqfj5GwW5a5+avmL3pzFhsuHRLwry
c8xd82fbKNrYMm+e3S8/Pts5dr+7Q3OGTnJSUencuYBwtu0D/wQxVlHx4uyW
2Sn2+wx6m3OThaho88Zxzplt5v7rl0XEqbixiu9Esx8BU/Zzin+2UpFarxC3
gW1O42LLSnUqfvpW41zIzkMSbWkomUzFpHfilHfs/Ahr2R313UlF1rlvrSvZ
lpNdkSlnRcXkqu28xuz8mXDuH74aSEXTlo2Ghuy89s3dORoWSsWxOt8LSuw8
O/0U4HGIomKpVks/Dzvvh4buKwldoGLCeV6/fPY8pDSLBMdXUvGlZOzn/Y4E
bLzrz+NVR8UJq2yOGfa85d1qzTR4QEXLosvuMfYEVGcHNS11U/H39v1bT9sQ
0B/ezXNsgoo76O45q/YQ4BIkd8V6moq2eR0cdubsvPlE/Ke2REUD6fqFS6YE
zNCV9n1frYe7wuiD/4wIENeJu+K2XQ8rz9mF0vUJOPCbpmzpp4e6NvwbXdn7
aLUQqbc/WA+ZtFq3z0rsPKo9Oso4qYcpwQruB9n7TDjAuIGZooe0loUWmgwB
z75amp2p0kODqeteJ0QJUPuwn1n/Rw/z71UyN3MQ8H5hqwAs6mEnzfIC7xIL
EiU+VbZx0/CT8lnzL/Ms+ERnzrBEaJjSn1SbyN7XmURg3LguDeNbOl8f/MIC
0vPoQumTNIyu1Kj06GD/B18MTEpjabghZmt+01MWOPHw/FBNoeG5In7eNa0s
qDVI1KBdo+GbCi7vS40sYDanPXJ4SMO3o10kvMWC3pqCoWRufczXChwWPMeC
/Nw2yZlz+ij7sW+WczcLsp2VX9ll6OO+vw7yJ3ax6xFPT63N1cefvJFtP2gs
SMk4wBNUqY+5Tj4xjZosCE/5N/mjVx8TFyyC10qzwPqU+uOR9YDF+1mUlH99
wOWa49N9BVD8H/ea3WV9UJNCGWBZI1LXvj+2e64Xgu/T9uVY7ES7zKtavKI9
8KD9xq8Exi5U2PLwsBirA3x2k5t86Ab4geei7b1nzyC7RP3OIV9DtGN0dukV
tUHq76bowONGCJ9PLox0P4LRsmMhzCBjlNC8ZSHv3QKtxmmZp0/vxpg655xA
uUbg2Pt25HyUCQb7iP5wsqwH0s67HHlhpiinktU0t1gL8Rtn9rDOmqH+7GCx
1btqCHRyfzRzxhyfutZyF5RWwHC0pgdcssCVK0LHeqZKQTj9ytuE/D24ubg6
dce/G1AkqBT29Koltrby62X1XoeHQVuM5Mv3ooLtyzGpR9cgVypPkma7D5Xk
5+XJIlehKWKexOzdh0apVV4WipdhqznvgoyDFZ7/xOEnG58OtT2KSW/6rTBz
9i5pW/EFSH6ypCblYo3K+z/wT3AkQ/rRMd8D76yRJpP2iNR3FiI2bF4r7WiD
e6er9V/vjYFSRe724CEbjH0xtMZcJBp4/nCIPXS1xXGpH7LZ609CsVr1qdwv
thjt7Lpa0zsUFA+WWS7622G/L3NQIikYBkzv3bb7boflghIee08dAVZB+HY4
ao+XFg6ahrj7w2yNlZ70L3uUMuG1bp1lwnJ90J24AAfseJK4yGnqCeZqxkYR
fx1wTbYp0fzZDZ66qPocOkrHQ2Or/iQFuYKQO7Mh5xgd28+XbU93dgVXZv7q
3uN0HFhYpJQZu8J00PrbmhF0JMyEi3glXEE2fmZ+MYaO19PN00+1ukDU7QfJ
FzLoOP/YPNhG3AUovPuq7tyjo8DC8wLLPgbECSRwfm2gY05nfgm1iQF96x7Z
ijfTkc+t+z+dUgYwJTXnTj2i49ifsNOO0Qy4rC66y6SDjh5F3sZmOxjwhzFE
vH1HR5IkF8HKcAJ0E9u2epCOJR9WNF0/4wRJXtahMEzHmo8l4VGBTiB9pFWy
8DMdg/u1jT3NnMAqrsTTf4KO/6lU/mYtOUJ20nDdtSk6yg7L7RP84QhfL4iv
Yv2i450N35QYbxwh6mpyhfYMHR1lKtXEah2hM6+N5DNHR5qAk3FyviNsLFqy
vvqPjv4ZRZUC5x3hYLnOja5FOj57PuaWFeEIFVWBM8vLdFSpCLXW8nWE/wF2
oSE4
                    "]]}, "Charting`Private`Tag#1"], 
                 Annotation[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], 
                   Line[CompressedData["
1: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
qfNZXFsjsNdmqn+a7f8BXNXQXQ==
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {0, 0}, 
                 "ImageSize" -> {450, 450/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2], 
                    Thickness[Large]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {0, 0}, "ImageSize" -> {450, 450/GoldenRatio},
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                GoldenRatio^(-1), "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.455, 0.7, 0.21], 
                   AbsoluteThickness[2], 
                   Thickness[Large]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>], 
            ImageSizeCache -> {{
             4.503599627370496*^15, -4.503599627370496*^15}, {
             4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
           False]}, 
         Annotation[{{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
Ho5TwU39+14FXemGEo3oYyqZKrj1Hff4mmE3ONUmNljXqyB1PFI0Uqgbuouz
R2LZVLHv92m7oIAuyMpoElq8p4q/54tCxXZ0QtpZmY+WKaqYdldINfNfB6Tu
SbpfkqGK8YbiJXKTHRCXcoHdm6yKhs+1UmOqOsA/7h99tlsV6yJOPVFy7ADz
IPk3YzsBu/LyQh0b3gHr+XTnzv8AYxpyhMIi38LGXlYx2aeAHVbnOG76voWV
AZevMS8AL9YGNAdffAvzlooWelWAVy/2hLYqvYUhoz7lxiFAh/Rbuid/tsPn
DFbOL9sQb+13cwiza4fiuNODveaI9wXUbnrqtcGlxzxslVaIFUp+lm9OtQFv
/phclg1izP7yCTHpNvCsj77jcQlRanPx9E6uNpBZ+CzF7Y1oVeVz6klHK+Sc
CfDTuo9YbkXd6WjZCsli1bsquhBNTOROET1aQEM+ATL7EL3Y4snOF1vgl4q9
c8RHxEvsfhZ3LVrA1Jq7hjCMqJgUsTB7sgW4o8/a/6QhXnbdbmrO3AJh9NUi
aR41rCTXSoWmNINvpYppuqEaqrOUF8q0N0GpTQvLgKka7hg6N1Jf3QR/V0xL
+SzV0J9uPWZPboKbSvZ7Ys+p4bjo2t7+5CYIqo6e8L+qhiGTIkOWF5ogsvaj
HzFBDS34Ej0+LzfCowavrJ39aphIPsUWdaIRBi/9szD5pIZsAdSUGulGENoU
zh4zpIaG/H666/sbIUMj1ZXlmxrWH/YbyOZohOzG2uM//6jh/NGvBkEDb6Cg
mau9k18d46pTw67cfgOv23N/Rdmq4+oes1fP+hqgSKDb65adOoY27/251NYA
OQ4r856X1VG+M93Roq4BollM6Nau6sjVZDIjWtgAhNNLM4cC1DHlwDOjo5EN
MP1c/1v9I3UkeBjeXVVuAL4o+sflAXUs7fmvjpNcD+wfBa3nvqhjBrXW3TOv
HpbFND+MjKojZ64CjqTXw9e61P6WHwzLth/7FFsPz5fUeh4sq+P87mI3Sdd6
UHVKbpcX1MD88JhtGlL14KxzqsaZqIFHbW5ySL+sA5qkYBP1rAYqW611jD+t
A+8ty++WL2ig3Ye+tdxHdRDYUTEU5ayBm+ImfDWi6yDBQnH1ub8Ghpdb1Y86
10GZ3Uml6TQNzO3mH8qWrgMWv+OvXEY1MP33xjCT/WuIPLOrvuibBsozDSi6
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
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
pD6m4Fa1lVPGbAvW6g0FdFDwtidzSojtK+XpQRYEBYWWzsn2s+uXLvjGpTRA
QZlN+RcT2S7L2nmZ9yMFwyffmWizrZGWqfj5GwW5a5+avmL3pzFhsuHRLwry
c8xd82fbKNrYMm+e3S8/Pts5dr+7Q3OGTnJSUencuYBwtu0D/wQxVlHx4uyW
2Sn2+wx6m3OThaho88Zxzplt5v7rl0XEqbixiu9Esx8BU/Zzin+2UpFarxC3
gW1O42LLSnUqfvpW41zIzkMSbWkomUzFpHfilHfs/Ahr2R313UlF1rlvrSvZ
lpNdkSlnRcXkqu28xuz8mXDuH74aSEXTlo2Ghuy89s3dORoWSsWxOt8LSuw8
O/0U4HGIomKpVks/Dzvvh4buKwldoGLCeV6/fPY8pDSLBMdXUvGlZOzn/Y4E
bLzrz+NVR8UJq2yOGfa85d1qzTR4QEXLosvuMfYEVGcHNS11U/H39v1bT9sQ
0B/ezXNsgoo76O45q/YQ4BIkd8V6moq2eR0cdubsvPlE/Ke2REUD6fqFS6YE
zNCV9n1frYe7wuiD/4wIENeJu+K2XQ8rz9mF0vUJOPCbpmzpp4e6NvwbXdn7
aLUQqbc/WA+ZtFq3z0rsPKo9Oso4qYcpwQruB9n7TDjAuIGZooe0loUWmgwB
z75amp2p0kODqeteJ0QJUPuwn1n/Rw/z71UyN3MQ8H5hqwAs6mEnzfIC7xIL
EiU+VbZx0/CT8lnzL/Ms+ERnzrBEaJjSn1SbyN7XmURg3LguDeNbOl8f/MIC
0vPoQumTNIyu1Kj06GD/B18MTEpjabghZmt+01MWOPHw/FBNoeG5In7eNa0s
qDVI1KBdo+GbCi7vS40sYDanPXJ4SMO3o10kvMWC3pqCoWRufczXChwWPMeC
/Nw2yZlz+ij7sW+WczcLsp2VX9ll6OO+vw7yJ3ax6xFPT63N1cefvJFtP2gs
SMk4wBNUqY+5Tj4xjZosCE/5N/mjVx8TFyyC10qzwPqU+uOR9YDF+1mUlH99
wOWa49N9BVD8H/ea3WV9UJNCGWBZI1LXvj+2e64Xgu/T9uVY7ES7zKtavKI9
8KD9xq8Exi5U2PLwsBirA3x2k5t86Ab4geei7b1nzyC7RP3OIV9DtGN0dukV
tUHq76bowONGCJ9PLox0P4LRsmMhzCBjlNC8ZSHv3QKtxmmZp0/vxpg655xA
uUbg2Pt25HyUCQb7iP5wsqwH0s67HHlhpiinktU0t1gL8Rtn9rDOmqH+7GCx
1btqCHRyfzRzxhyfutZyF5RWwHC0pgdcssCVK0LHeqZKQTj9ytuE/D24ubg6
dce/G1AkqBT29Koltrby62X1XoeHQVuM5Mv3ooLtyzGpR9cgVypPkma7D5Xk
5+XJIlehKWKexOzdh0apVV4WipdhqznvgoyDFZ7/xOEnG58OtT2KSW/6rTBz
9i5pW/EFSH6ypCblYo3K+z/wT3AkQ/rRMd8D76yRJpP2iNR3FiI2bF4r7WiD
e6er9V/vjYFSRe724CEbjH0xtMZcJBp4/nCIPXS1xXGpH7LZ609CsVr1qdwv
thjt7Lpa0zsUFA+WWS7622G/L3NQIikYBkzv3bb7boflghIee08dAVZB+HY4
ao+XFg6ahrj7w2yNlZ70L3uUMuG1bp1lwnJ90J24AAfseJK4yGnqCeZqxkYR
fx1wTbYp0fzZDZ66qPocOkrHQ2Or/iQFuYKQO7Mh5xgd28+XbU93dgVXZv7q
3uN0HFhYpJQZu8J00PrbmhF0JMyEi3glXEE2fmZ+MYaO19PN00+1ukDU7QfJ
FzLoOP/YPNhG3AUovPuq7tyjo8DC8wLLPgbECSRwfm2gY05nfgm1iQF96x7Z
ijfTkc+t+z+dUgYwJTXnTj2i49ifsNOO0Qy4rC66y6SDjh5F3sZmOxjwhzFE
vH1HR5IkF8HKcAJ0E9u2epCOJR9WNF0/4wRJXtahMEzHmo8l4VGBTiB9pFWy
8DMdg/u1jT3NnMAqrsTTf4KO/6lU/mYtOUJ20nDdtSk6yg7L7RP84QhfL4iv
Yv2i450N35QYbxwh6mpyhfYMHR1lKtXEah2hM6+N5DNHR5qAk3FyviNsLFqy
vvqPjv4ZRZUC5x3hYLnOja5FOj57PuaWFeEIFVWBM8vLdFSpCLXW8nWE/wF2
oSE4
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.455, 0.7, 0.21], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
qfNZXFsjsNdmqn+a7f8BXNXQXQ==
                "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {450, 450/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.455, 0.7, 0.21], 
                AbsoluteThickness[2], 
                Thickness[Large]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>, 
          "DynamicHighlight"]], AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox[
            TagBox["\"Proportion\"", HoldForm], TraditionalForm], None}, {
           FormBox[
            TagBox["\"Time\"", HoldForm], TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 450, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
          None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Susceptible\"", "\"Infected\"", "\"Recovered\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.455, 0.7, 0.21], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.455, 0.7, 0.21]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {330.3, -152.775}, {Center, Center}, {471.00000000000006, 291.00000000000006},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     TemplateBox[{
       GraphicsBox[
        InterpretationBox[{
          TagBox[{{{}, {}, 
             TagBox[{
               RGBColor[0.24, 0.6, 0.8], 
               Thickness[Large], 
               Opacity[1.], 
               LineBox[CompressedData["
1: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
JJ7HxryX+B/pZa86
                "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
             TagBox[{
               RGBColor[0.95, 0.627, 0.1425], 
               Thickness[Large], 
               Opacity[1.], 
               Dashing[{Small, Small}], 
               LineBox[CompressedData["
1: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
ulbt
                "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
           "WolframDynamicHighlight", <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
          StyleBox[
           DynamicBox[
            (Charting`HighlightActionBox["DynamicHighlight", {}, 
             Slot["HighlightElements"], 
             Slot["LayoutOptions"], 
             Slot["Meta"], 
             Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
                 Annotation[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], 
                   Line[CompressedData["
1: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
JJ7HxryX+B/pZa86
                    "]]}, "Charting`Private`Tag#1"], 
                 Annotation[{
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]], 
                   Line[CompressedData["
1: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
ulbt
                    "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
                 "Frame" -> {{True, True}, {True, True}}, 
                 "AxesOrigin" -> {0, 0}, 
                 "ImageSize" -> {450, 450/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {0, 0}, "ImageSize" -> {450, 450/GoldenRatio},
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                GoldenRatio^(-1), "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.95, 0.627, 0.1425], 
                   AbsoluteThickness[2], 
                   Thickness[Large], 
                   Dashing[{Small, Small}]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>], 
            ImageSizeCache -> {{
             4.503599627370496*^15, -4.503599627370496*^15}, {
             4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
           False]}, 
         Annotation[{{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2], 
                Thickness[Large]], 
               Line[CompressedData["
1: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
JJ7HxryX+B/pZa86
                "]]}, "Charting`Private`Tag#1"], 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                Dashing[{Small, Small}]], 
               Line[CompressedData["
1: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
ulbt
                "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {450, 450/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.95, 0.627, 0.1425], 
                AbsoluteThickness[2], 
                Thickness[Large], 
                Dashing[{Small, Small}]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>, 
          "DynamicHighlight"]], AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
        Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
           FormBox[
            TagBox["\"Population (arb. units)\"", HoldForm], TraditionalForm],
            None}, {
           FormBox[
            TagBox["\"Time\"", HoldForm], TraditionalForm], None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 450, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
          None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Prey\"", "\"Predator\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 12.5}, {40, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.95, 0.627, 0.1425], 
                    AbsoluteThickness[2], 
                    Thickness[Large], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.95, 0.627, 0.1425]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {993.9000000000001, -152.775}, {
     Center, Center}, {477.0000000000001, 291.00000000000006},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->950,
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRange->{{0, 1327.2}, {-305.55, 0}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{
  3.9635675832782326`*^9, 3.9635684501332436`*^9, 3.963741608271427*^9, 
   3.963772439222103*^9, {3.963772472002146*^9, 3.9637724884947395`*^9}, {
   3.963772520319063*^9, 3.9637725307681255`*^9}, 3.9637725623763237`*^9, 
   3.9637726494567356`*^9, 3.9639358600518723`*^9, 3.96408442334643*^9, 
   3.964085528874975*^9, 3.9642473496522427`*^9},
 CellTags->"ChatGeneratedCell",
 CellLabel->
  "Out[171]=",ExpressionUUID->"c79f6ba3-691e-a948-8097-f541a1b2a550"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making the model able to be manipulated", "Subsection",
 CellChangeTimes->{{3.9635678701088867`*^9, 
  3.9635678909179077`*^9}},ExpressionUUID->"0ab23b14-9867-a34b-92bc-\
feaed46174a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"S", ",", "Z", ",", "R", ",", "prey", ",", "predator", ",", "t"}],
     "]"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "equations", ",", "solution", ",", "betaEff", ",", "gammaEff", ",", 
        "r0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"BOUNDED", " ", 
         RowBox[{"couplings", ":", 
          RowBox[{"always", " ", "positive"}]}]}], ",", 
        RowBox[{"saturating", " ", "effects"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"betaEff", "[", "t_", "]"}], ":=", 
        RowBox[{"beta", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"kBeta", "*", 
            RowBox[{"prey", "[", "t", "]"}]}]}], ")"}]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"more", " ", "prey"}], "\[RightArrow]", 
          RowBox[{"smaller", " ", "\[Beta]"}]}], ",", 
         RowBox[{"never", "\[LessEqual]", "0"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gammaEff", "[", "t_", "]"}], ":=", 
        RowBox[{"gamma", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"kGamma", "*", 
            RowBox[{
             RowBox[{"predator", "[", "t", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"predator", "[", "t", "]"}]}], ")"}]}]}]}], ")"}]}]}], 
       ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"more", " ", "predators"}], "\[RightArrow]", 
          RowBox[{"larger", " ", "\[Gamma]"}]}], ",", "bounded"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"equations", "=", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"S", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"betaEff", "[", "t", "]"}]}], " ", 
            RowBox[{"S", "[", "t", "]"}], " ", 
            RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Z", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{
             RowBox[{"betaEff", "[", "t", "]"}], " ", 
             RowBox[{"S", "[", "t", "]"}], " ", 
             RowBox[{"Z", "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"gammaEff", "[", "t", "]"}], " ", 
             RowBox[{"Z", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"R", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{"gammaEff", "[", "t", "]"}], " ", 
            RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"prey", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{"a", " ", 
             RowBox[{"prey", "[", "t", "]"}]}], "-", 
            RowBox[{"b", " ", 
             RowBox[{"prey", "[", "t", "]"}], " ", 
             RowBox[{"predator", "[", "t", "]"}]}], "-", 
            RowBox[{"interactionRate", " ", 
             RowBox[{"Z", "[", "t", "]"}], " ", 
             RowBox[{"prey", "[", "t", "]"}]}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"predator", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{"c", " ", 
             RowBox[{"prey", "[", "t", "]"}], " ", 
             RowBox[{"predator", "[", "t", "]"}]}], "-", 
            RowBox[{"d", " ", 
             RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"S", "[", "0", "]"}], "==", "0.99"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Z", "[", "0", "]"}], "==", "0.01"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"R", "[", "0", "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prey", "[", "0", "]"}], "==", "0.99"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"predator", "[", "0", "]"}], "==", "0.01"}]}], "}"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"solution", "=", 
        RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
         RowBox[{"equations", ",", 
          RowBox[{"{", 
           RowBox[{"S", ",", "Z", ",", "R", ",", "prey", ",", "predator"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Method", "->", "\"\<StiffnessSwitching\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"MaxStepFraction", "->", 
           RowBox[{"1", "/", "500"}]}]}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"r0", "[", "t_", "]"}], ":=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"betaEff", "[", "t", "]"}], " ", 
            RowBox[{"S", "[", "t", "]"}]}], ")"}], "/", 
          RowBox[{"gammaEff", "[", "t", "]"}]}], "/.", " ", "solution"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"instantaneous", " ", "reproduction", " ", "ratio"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Column", "[", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"S", "[", "t", "]"}], ",", 
                RowBox[{"Z", "[", "t", "]"}], ",", 
                RowBox[{"R", "[", "t", "]"}]}], "}"}], "/.", " ", 
              "solution"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
            RowBox[{"PlotLegends", "->", 
             RowBox[{"{", 
              
              RowBox[{"\"\<Susceptible\>\"", ",", "\"\<Infected\>\"", 
               ",", "\"\<Recovered\>\""}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "->", "True"}], ",", 
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<Time\>\"", ",", "\"\<Proportion\>\""}], "}"}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "->", "All"}], ",", 
            RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<SIR Dynamics\>\"", ",", "Bold", ",", "14"}], 
              "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"prey", "[", "t", "]"}], ",", 
                RowBox[{"predator", "[", "t", "]"}]}], "}"}], "/.", " ", 
              "solution"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
            RowBox[{"PlotLegends", "->", 
             RowBox[{"{", 
              RowBox[{"\"\<Prey\>\"", ",", "\"\<Predator\>\""}], "}"}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"Frame", "->", "True"}], ",", 
            RowBox[{"FrameLabel", "->", 
             RowBox[{"{", 
              
              RowBox[{"\"\<Time\>\"", 
               ",", "\"\<Population (arb. units)\>\""}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "->", "All"}], ",", 
            RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"Style", "[", 
              
              RowBox[{"\"\<Predator\[Dash]Prey Dynamics\>\"", ",", "Bold", ",",
                "14"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"r0", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Frame", "->", "True"}], ",", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{"\"\<Time\>\"", ",", "\"\<R0(t)\>\""}], "}"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotRange", "->", "All"}], ",", 
              RowBox[{"PlotStyle", "->", "Thick"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"PlotLabel", "->", 
               RowBox[{"Style", "[", 
                
                RowBox[{"\"\<Instantaneous R0(t)\>\"", ",", "Bold", ",", 
                 "14"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Plot", "[", 
             RowBox[{"1", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
              RowBox[{"PlotStyle", "->", 
               RowBox[{"{", "Dashed", "}"}]}]}], "]"}]}], "]"}]}], "}"}], 
        "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{
        RowBox[{"Sliders", "--"}], "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "beta", ",", "0.30", ",", "\"\<Base infection rate (\[Beta])\>\""}], 
       "}"}], ",", "0.01", ",", "1", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "gamma", ",", "0.10", ",", "\"\<Base recovery rate (\[Gamma])\>\""}], 
       "}"}], ",", "0.01", ",", "1", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "0.10", ",", "\"\<Prey growth rate (a)\>\""}], "}"}],
       ",", "0.01", ",", "1", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b", ",", "0.02", ",", "\"\<Predation rate (b)\>\""}], "}"}], ",",
       "0.001", ",", "0.2", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", "0.10", ",", "\"\<Predator growth per prey (c)\>\""}], "}"}],
       ",", "0.01", ",", "1", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d", ",", "0.01", ",", "\"\<Predator death (d)\>\""}], "}"}], ",",
       "0.001", ",", "0.2", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "interactionRate", ",", "0.01", 
        ",", "\"\<Zombie\[Dash]prey interaction rate\>\""}], "}"}], ",", "0", 
      ",", "0.2", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "kBeta", ",", "0.3", ",", "\"\<Prey effect on \[Beta] (kBeta)\>\""}], 
       "}"}], ",", "0.", ",", "2.", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "kGamma", ",", "0.5", 
        ",", "\"\<Predator effect on \[Gamma] (kGamma)\>\""}], "}"}], ",", 
      "0.", ",", "2.", ",", 
      RowBox[{"Appearance", "->", "\"\<Labeled\>\""}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "\n"}], "\n"}], "Code",
 CellChangeTimes->{{3.9635678972657833`*^9, 3.963568000719612*^9}, {
   3.9635685692059803`*^9, 3.9635685696860085`*^9}, {3.963681082794346*^9, 
   3.9636810833644276`*^9}, {3.9637727548866024`*^9, 3.963772805467474*^9}, {
   3.9637729041177483`*^9, 3.963772978728651*^9}, {3.9637730246091175`*^9, 
   3.9637731195191097`*^9}, {3.9637731590644817`*^9, 
   3.9637732306450253`*^9}, {3.96377346635664*^9, 3.9637735871054325`*^9}, {
   3.963773696294815*^9, 3.963773704445305*^9}, 3.963773846466402*^9, {
   3.96378206605011*^9, 3.9637821695500946`*^9}, {3.9637822267832584`*^9, 
   3.9637822308223324`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"eb64599b-d102-c64a-8381-10b90794c80d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.1, $CellContext`b$$ = 
    0.02, $CellContext`beta$$ = 0.3, $CellContext`c$$ = 
    0.1, $CellContext`d$$ = 0.01, $CellContext`gamma$$ = 
    0.1, $CellContext`interactionRate$$ = 0.01, $CellContext`kBeta$$ = 
    0.3, $CellContext`kGamma$$ = 0.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`beta$$], 0.3, "Base infection rate (\[Beta])"}, 0.01,
       1, ControlType -> Manipulator}, {{
       Hold[$CellContext`gamma$$], 0.1, "Base recovery rate (\[Gamma])"}, 
      0.01, 1, ControlType -> Manipulator}, {{
       Hold[$CellContext`a$$], 0.1, "Prey growth rate (a)"}, 0.01, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`b$$], 0.02, "Predation rate (b)"}, 0.001, 0.2, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`c$$], 0.1, "Predator growth per prey (c)"}, 0.01, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`d$$], 0.01, "Predator death (d)"}, 0.001, 0.2, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`interactionRate$$], 0.01, 
       "Zombie\[Dash]prey interaction rate"}, 0, 0.2, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`kBeta$$], 0.3, "Prey effect on \[Beta] (kBeta)"}, 0.,
       2., ControlType -> Manipulator}, {{
       Hold[$CellContext`kGamma$$], 0.5, 
       "Predator effect on \[Gamma] (kGamma)"}, 0., 2., ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    288.90898783206933`, {206.18802341575577`, 211.91995721975184`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.1, $CellContext`b$$ = 
        0.02, $CellContext`beta$$ = 0.3, $CellContext`c$$ = 
        0.1, $CellContext`d$$ = 0.01, $CellContext`gamma$$ = 
        0.1, $CellContext`interactionRate$$ = 0.01, $CellContext`kBeta$$ = 
        0.3, $CellContext`kGamma$$ = 0.5}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`equations$, $CellContext`solution$, \
$CellContext`betaEff$, $CellContext`gammaEff$, $CellContext`r0$}, \
$CellContext`betaEff$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`beta$$/(
          1 + $CellContext`kBeta$$ $CellContext`prey[$CellContext`t$]); \
$CellContext`gammaEff$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`gamma$$ (
           1 + $CellContext`kGamma$$ ($CellContext`predator[$CellContext`t$]/(
             1 + $CellContext`predator[$CellContext`t$]))); \
$CellContext`equations$ = {
          Derivative[
            1][$CellContext`S][$CellContext`t] == \
(-$CellContext`betaEff$[$CellContext`t]) $CellContext`S[$CellContext`t] \
$CellContext`Z[$CellContext`t], 
           Derivative[
            1][$CellContext`Z][$CellContext`t] == \
$CellContext`betaEff$[$CellContext`t] $CellContext`S[$CellContext`t] \
$CellContext`Z[$CellContext`t] - $CellContext`gammaEff$[$CellContext`t] \
$CellContext`Z[$CellContext`t], 
           Derivative[
            1][$CellContext`R][$CellContext`t] == \
$CellContext`gammaEff$[$CellContext`t] $CellContext`Z[$CellContext`t], 
           Derivative[
            1][$CellContext`prey][$CellContext`t] == $CellContext`a$$ \
$CellContext`prey[$CellContext`t] - $CellContext`b$$ \
$CellContext`prey[$CellContext`t] $CellContext`predator[$CellContext`t] - \
$CellContext`interactionRate$$ $CellContext`Z[$CellContext`t] \
$CellContext`prey[$CellContext`t], 
           Derivative[
            1][$CellContext`predator][$CellContext`t] == $CellContext`c$$ \
$CellContext`prey[$CellContext`t] $CellContext`predator[$CellContext`t] - \
$CellContext`d$$ $CellContext`predator[$CellContext`t], $CellContext`S[0] == 
           0.99, $CellContext`Z[0] == 0.01, $CellContext`R[0] == 
           0, $CellContext`prey[0] == 0.99, $CellContext`predator[0] == 
           0.01}; $CellContext`solution$ = 
         NDSolve[$CellContext`equations$, {$CellContext`S, $CellContext`Z, \
$CellContext`R, $CellContext`prey, $CellContext`predator}, {$CellContext`t, 0,
             100}, Method -> "StiffnessSwitching", MaxStepFraction -> 
           1/500]; $CellContext`r0$[
           Pattern[$CellContext`t$, 
            Blank[]]] := 
         ReplaceAll[($CellContext`betaEff$[$CellContext`t$] \
$CellContext`S[$CellContext`t$])/$CellContext`gammaEff$[$CellContext`t$], \
$CellContext`solution$]; Column[{
           Plot[
            Evaluate[
             ReplaceAll[{
               $CellContext`S[$CellContext`t], 
               $CellContext`Z[$CellContext`t], 
               $CellContext`R[$CellContext`t]}, $CellContext`solution$]], \
{$CellContext`t, 0, 100}, 
            PlotLegends -> {"Susceptible", "Infected", "Recovered"}, Frame -> 
            True, FrameLabel -> {"Time", "Proportion"}, PlotRange -> All, 
            PlotStyle -> Thick, PlotLabel -> Style["SIR Dynamics", Bold, 14]], 
           Plot[
            Evaluate[
             ReplaceAll[{
               $CellContext`prey[$CellContext`t], 
               $CellContext`predator[$CellContext`t]}, \
$CellContext`solution$]], {$CellContext`t, 0, 100}, 
            PlotLegends -> {"Prey", "Predator"}, Frame -> True, 
            FrameLabel -> {"Time", "Population (arb. units)"}, PlotRange -> 
            All, PlotStyle -> Thick, PlotLabel -> 
            Style["Predator\[Dash]Prey Dynamics", Bold, 14]], 
           Show[
            Plot[
             $CellContext`r0$[$CellContext`t], {$CellContext`t, 0, 100}, 
             Frame -> True, FrameLabel -> {"Time", "R0(t)"}, PlotRange -> All,
              PlotStyle -> Thick, PlotLabel -> 
             Style["Instantaneous R0(t)", Bold, 14]], 
            Plot[1, {$CellContext`t, 0, 100}, PlotStyle -> {Dashed}]]}]], 
      "Specifications" :> {{{$CellContext`beta$$, 0.3, 
          "Base infection rate (\[Beta])"}, 0.01, 1, Appearance -> 
         "Labeled"}, {{$CellContext`gamma$$, 0.1, 
          "Base recovery rate (\[Gamma])"}, 0.01, 1, Appearance -> 
         "Labeled"}, {{$CellContext`a$$, 0.1, "Prey growth rate (a)"}, 0.01, 
         1, Appearance -> 
         "Labeled"}, {{$CellContext`b$$, 0.02, "Predation rate (b)"}, 0.001, 
         0.2, Appearance -> 
         "Labeled"}, {{$CellContext`c$$, 0.1, "Predator growth per prey (c)"},
          0.01, 1, Appearance -> 
         "Labeled"}, {{$CellContext`d$$, 0.01, "Predator death (d)"}, 0.001, 
         0.2, Appearance -> 
         "Labeled"}, {{$CellContext`interactionRate$$, 0.01, 
          "Zombie\[Dash]prey interaction rate"}, 0, 0.2, Appearance -> 
         "Labeled"}, 
        Delimiter, {{$CellContext`kBeta$$, 0.3, 
          "Prey effect on \[Beta] (kBeta)"}, 0., 2., Appearance -> 
         "Labeled"}, {{$CellContext`kGamma$$, 0.5, 
          "Predator effect on \[Gamma] (kGamma)"}, 0., 2., Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{
      694.7971725945127, {235.3988632595058, 241.13079706350186`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.96377323342626*^9, 3.9637733055364017`*^9, 
  3.9637735884374886`*^9, 3.9637736196542587`*^9, 3.9637737064782467`*^9, 
  3.963773847537571*^9, 3.9637821769643784`*^9, 3.96408442339126*^9, 
  3.9640855289365387`*^9, 3.9642473497187824`*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"0a8d78ca-2de8-754c-bcb0-4ec9b38c870b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementing seasons", "Subsection",
 CellChangeTimes->{{3.9636810936300983`*^9, 3.9636811073327713`*^9}, {
  3.963681640747196*^9, 
  3.963681644385439*^9}},ExpressionUUID->"f1bc4deb-119e-d546-b6d8-\
8df24c79928f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.963681325165764*^9, 
  3.9636813601205463`*^9}},ExpressionUUID->"d75fa0b9-eefc-7e41-8226-\
f49c29ff7664"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"S", ",", "Z", ",", "R", ",", "prey", ",", "predator", ",", "t"}],
     "]"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "equations", ",", "solution", ",", "betaEff", ",", "gammaEff", ",", 
       "r0", ",", "betaSeasonal", ",", "aSeasonal"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Seasonal", " ", "variation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"betaSeasonal", "[", "t_", "]"}], ":=", 
       RowBox[{"beta", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"A\[Beta]", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "*", "Pi", "*", 
             RowBox[{"t", "/", "Tseason"}]}], "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aSeasonal", "[", "t_", "]"}], ":=", 
       RowBox[{"a", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Aa", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"2", "*", "Pi", "*", 
              RowBox[{"t", "/", "Tseason"}]}], "+", "phi"}], "]"}]}]}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Bounded", " ", 
         RowBox[{"couplings", ":", 
          RowBox[{"always", " ", "positive"}]}]}], ",", 
        RowBox[{"saturating", " ", "effects"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"betaEff", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"betaSeasonal", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"kBeta", "*", 
           RowBox[{"prey", "[", "t", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gammaEff", "[", "t_", "]"}], ":=", 
       RowBox[{"gamma", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"kGamma", "*", 
           RowBox[{
            RowBox[{"predator", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"predator", "[", "t", "]"}]}], ")"}]}]}]}], ")"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"equations", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"S", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"betaEff", "[", "t", "]"}]}], " ", 
           RowBox[{"S", "[", "t", "]"}], " ", 
           RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Z", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{
            RowBox[{"betaEff", "[", "t", "]"}], " ", 
            RowBox[{"S", "[", "t", "]"}], " ", 
            RowBox[{"Z", "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"gammaEff", "[", "t", "]"}], " ", 
            RowBox[{"Z", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"gammaEff", "[", "t", "]"}], " ", 
           RowBox[{"Z", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"prey", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{
            RowBox[{"aSeasonal", "[", "t", "]"}], " ", 
            RowBox[{"prey", "[", "t", "]"}]}], "-", 
           RowBox[{"b", " ", 
            RowBox[{"prey", "[", "t", "]"}], " ", 
            RowBox[{"predator", "[", "t", "]"}]}], "-", 
           RowBox[{"interactionRate", " ", 
            RowBox[{"Z", "[", "t", "]"}], " ", 
            RowBox[{"prey", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"predator", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"c", " ", 
            RowBox[{"prey", "[", "t", "]"}], " ", 
            RowBox[{"predator", "[", "t", "]"}]}], "-", 
           RowBox[{"d", " ", 
            RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"S", "[", "0", "]"}], "==", "0.99"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Z", "[", "0", "]"}], "==", "0.01"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "==", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prey", "[", "0", "]"}], "==", "0.99"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"predator", "[", "0", "]"}], "==", "0.01"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"solution", "=", 
       RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
        RowBox[{"equations", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"S", ",", "Z", ",", "R", ",", "prey", ",", "predator"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Method", "->", "\"\<StiffnessSwitching\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"MaxStepFraction", "->", 
          RowBox[{"1", "/", "500"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r0", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"betaEff", "[", "t", "]"}], " ", 
           RowBox[{"S", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"gammaEff", "[", "t", "]"}]}], "/.", " ", "solution"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Plot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"S", "[", "t", "]"}], ",", 
               RowBox[{"Z", "[", "t", "]"}], ",", 
               RowBox[{"R", "[", "t", "]"}]}], "}"}], "/.", " ", "solution"}],
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"{", 
             
             RowBox[{"\"\<Susceptible\>\"", ",", "\"\<Infected\>\"", 
              ",", "\"\<Recovered\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Time\>\"", ",", "\"\<Proportion\>\""}], "}"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             
             RowBox[{"\"\<SIR Dynamics (with Seasons)\>\"", ",", "Bold", ",", 
              "14"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"prey", "[", "t", "]"}], ",", 
               RowBox[{"predator", "[", "t", "]"}]}], "}"}], "/.", " ", 
             "solution"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Prey\>\"", ",", "\"\<Predator\>\""}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Time\>\"", ",", "\"\<Population (arb. units)\>\""}],
              "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", "All"}], ",", 
           RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             
             RowBox[{"\"\<Predator\[Dash]Prey Dynamics (with Seasons)\>\"", ",",
               "Bold", ",", "14"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"r0", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<Time\>\"", ",", "\"\<R0(t)\>\""}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "->", "All"}], ",", 
             RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "->", 
              RowBox[{"Style", "[", 
               
               RowBox[{"\"\<Instantaneous R0(t)\>\"", ",", "Bold", ",", 
                "14"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{"1", ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
             RowBox[{"PlotStyle", "->", 
              RowBox[{"{", "Dashed", "}"}]}]}], "]"}]}], "]"}]}], "}"}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Sliders", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "beta", ",", "0.30", ",", "\"\<Base infection rate (\[Beta])\>\""}], 
      "}"}], ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "gamma", ",", "0.10", ",", "\"\<Base recovery rate (\[Gamma])\>\""}], 
      "}"}], ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0.10", ",", "\"\<Prey growth rate (a)\>\""}], "}"}], 
     ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "0.02", ",", "\"\<Predation rate (b)\>\""}], "}"}], ",",
      "0.001", ",", "0.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.10", ",", "\"\<Predator growth per prey (c)\>\""}],
       "}"}], ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "0.01", ",", "\"\<Predator death (d)\>\""}], "}"}], ",",
      "0.001", ",", "0.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interactionRate", ",", "0.01", 
       ",", "\"\<Zombie\[Dash]prey interaction rate\>\""}], "}"}], ",", "0", ",",
      "0.2"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "kBeta", ",", "0.3", ",", "\"\<Prey effect on \[Beta] (kBeta)\>\""}], 
      "}"}], ",", "0.", ",", "2."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "kGamma", ",", "0.5", 
       ",", "\"\<Predator effect on \[Gamma] (kGamma)\>\""}], "}"}], ",", 
     "0.", ",", "2."}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "Delimiter", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A\[Beta]", ",", "0.3", ",", "\"\<Seasonal amplitude on \[Beta]\>\""}], 
      "}"}], ",", "0.", ",", "1."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Aa", ",", "0.2", ",", "\"\<Seasonal amplitude on a\>\""}], 
      "}"}], ",", "0.", ",", "1."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tseason", ",", "50", ",", "\"\<Seasonal period (days)\>\""}], 
      "}"}], ",", "10", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "phi", ",", "0", ",", "\"\<Phase shift between \[Beta] and a\>\""}], 
      "}"}], ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.963681739345482*^9, 3.963681739345482*^9}, {
   3.9636818096949368`*^9, 3.9636820546830616`*^9}, 3.963782280419094*^9, {
   3.964251627767475*^9, 
   3.964251768041939*^9}},ExpressionUUID->"47f3b855-ffa0-0040-bdee-\
6f807c842428"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.097, $CellContext`Aa$$ = 
    0.712, $CellContext`A\[Beta]$$ = 0.368, $CellContext`b$$ = 
    0.02, $CellContext`beta$$ = 0.372, $CellContext`c$$ = 
    0.074, $CellContext`d$$ = 0.083, $CellContext`gamma$$ = 
    0.036000000000000004`, $CellContext`interactionRate$$ = 
    0.01, $CellContext`kBeta$$ = 0.3, $CellContext`kGamma$$ = 
    0.5, $CellContext`phi$$ = 3.141592653589793, $CellContext`Tseason$$ = 
    13.8, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`beta$$], 0.3, "Base infection rate (\[Beta])"}, 0.01,
       1, ControlType -> Manipulator}, {{
       Hold[$CellContext`gamma$$], 0.1, "Base recovery rate (\[Gamma])"}, 
      0.01, 1, ControlType -> Manipulator}, {{
       Hold[$CellContext`a$$], 0.1, "Prey growth rate (a)"}, 0.01, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`b$$], 0.02, "Predation rate (b)"}, 0.001, 0.2, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`c$$], 0.1, "Predator growth per prey (c)"}, 0.01, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`d$$], 0.01, "Predator death (d)"}, 0.001, 0.2, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`interactionRate$$], 0.01, 
       "Zombie\[Dash]prey interaction rate"}, 0, 0.2, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`kBeta$$], 0.3, "Prey effect on \[Beta] (kBeta)"}, 0.,
       2., ControlType -> Manipulator}, {{
       Hold[$CellContext`kGamma$$], 0.5, 
       "Predator effect on \[Gamma] (kGamma)"}, 0., 2., ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`A\[Beta]$$], 0.3, "Seasonal amplitude on \[Beta]"}, 
      0., 1., ControlType -> Manipulator}, {{
       Hold[$CellContext`Aa$$], 0.2, "Seasonal amplitude on a"}, 0., 1., 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`Tseason$$], 50, "Seasonal period (days)"}, 10, 100, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`phi$$], 0, "Phase shift between \[Beta] and a"}, 0, 
      2 Pi, ControlType -> Manipulator}}, Typeset`size$$ = {
    288.90898783206933`, {201.51953535080446`, 207.25146915480053`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.1, $CellContext`Aa$$ = 
        0.2, $CellContext`A\[Beta]$$ = 0.3, $CellContext`b$$ = 
        0.02, $CellContext`beta$$ = 0.3, $CellContext`c$$ = 
        0.1, $CellContext`d$$ = 0.01, $CellContext`gamma$$ = 
        0.1, $CellContext`interactionRate$$ = 0.01, $CellContext`kBeta$$ = 
        0.3, $CellContext`kGamma$$ = 0.5, $CellContext`phi$$ = 
        0, $CellContext`Tseason$$ = 50}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`equations$, $CellContext`solution$, \
$CellContext`betaEff$, $CellContext`gammaEff$, $CellContext`r0$, \
$CellContext`betaSeasonal$, $CellContext`aSeasonal$}, \
$CellContext`betaSeasonal$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`beta$$ (
           1 + $CellContext`A\[Beta]$$ 
            Sin[2 Pi ($CellContext`t$/$CellContext`Tseason$$)]); \
$CellContext`aSeasonal$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`a$$ (
           1 + $CellContext`Aa$$ 
            Sin[2 Pi ($CellContext`t$/$CellContext`Tseason$$) + \
$CellContext`phi$$]); $CellContext`betaEff$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`betaSeasonal$[$CellContext`t$]/(
          1 + $CellContext`kBeta$$ $CellContext`prey[$CellContext`t$]); \
$CellContext`gammaEff$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`gamma$$ (
           1 + $CellContext`kGamma$$ ($CellContext`predator[$CellContext`t$]/(
             1 + $CellContext`predator[$CellContext`t$]))); \
$CellContext`equations$ = {
          Derivative[
            1][$CellContext`S][$CellContext`t] == \
(-$CellContext`betaEff$[$CellContext`t]) $CellContext`S[$CellContext`t] \
$CellContext`Z[$CellContext`t], 
           Derivative[
            1][$CellContext`Z][$CellContext`t] == \
$CellContext`betaEff$[$CellContext`t] $CellContext`S[$CellContext`t] \
$CellContext`Z[$CellContext`t] - $CellContext`gammaEff$[$CellContext`t] \
$CellContext`Z[$CellContext`t], 
           Derivative[
            1][$CellContext`R][$CellContext`t] == \
$CellContext`gammaEff$[$CellContext`t] $CellContext`Z[$CellContext`t], 
           Derivative[
            1][$CellContext`prey][$CellContext`t] == \
$CellContext`aSeasonal$[$CellContext`t] $CellContext`prey[$CellContext`t] - \
$CellContext`b$$ $CellContext`prey[$CellContext`t] \
$CellContext`predator[$CellContext`t] - $CellContext`interactionRate$$ \
$CellContext`Z[$CellContext`t] $CellContext`prey[$CellContext`t], 
           Derivative[
            1][$CellContext`predator][$CellContext`t] == $CellContext`c$$ \
$CellContext`prey[$CellContext`t] $CellContext`predator[$CellContext`t] - \
$CellContext`d$$ $CellContext`predator[$CellContext`t], $CellContext`S[0] == 
           0.99, $CellContext`Z[0] == 0.01, $CellContext`R[0] == 
           0, $CellContext`prey[0] == 0.99, $CellContext`predator[0] == 
           0.01}; $CellContext`solution$ = 
         NDSolve[$CellContext`equations$, {$CellContext`S, $CellContext`Z, \
$CellContext`R, $CellContext`prey, $CellContext`predator}, {$CellContext`t, 0,
             100}, Method -> "StiffnessSwitching", MaxStepFraction -> 
           1/500]; $CellContext`r0$[
           Pattern[$CellContext`t$, 
            Blank[]]] := 
         ReplaceAll[($CellContext`betaEff$[$CellContext`t$] \
$CellContext`S[$CellContext`t$])/$CellContext`gammaEff$[$CellContext`t$], \
$CellContext`solution$]; Column[{
           Plot[
            Evaluate[
             ReplaceAll[{
               $CellContext`S[$CellContext`t], 
               $CellContext`Z[$CellContext`t], 
               $CellContext`R[$CellContext`t]}, $CellContext`solution$]], \
{$CellContext`t, 0, 100}, 
            PlotLegends -> {"Susceptible", "Infected", "Recovered"}, Frame -> 
            True, FrameLabel -> {"Time", "Proportion"}, PlotRange -> All, 
            PlotStyle -> Thick, PlotLabel -> 
            Style["SIR Dynamics (with Seasons)", Bold, 14]], 
           Plot[
            Evaluate[
             ReplaceAll[{
               $CellContext`prey[$CellContext`t], 
               $CellContext`predator[$CellContext`t]}, \
$CellContext`solution$]], {$CellContext`t, 0, 100}, 
            PlotLegends -> {"Prey", "Predator"}, Frame -> True, 
            FrameLabel -> {"Time", "Population (arb. units)"}, PlotRange -> 
            All, PlotStyle -> Thick, PlotLabel -> 
            Style["Predator\[Dash]Prey Dynamics (with Seasons)", Bold, 14]], 
           Show[
            Plot[
             $CellContext`r0$[$CellContext`t], {$CellContext`t, 0, 100}, 
             Frame -> True, FrameLabel -> {"Time", "R0(t)"}, PlotRange -> All,
              PlotStyle -> Thick, PlotLabel -> 
             Style["Instantaneous R0(t)", Bold, 14]], 
            Plot[1, {$CellContext`t, 0, 100}, PlotStyle -> {Dashed}]]}]], 
      "Specifications" :> {{{$CellContext`beta$$, 0.3, 
          "Base infection rate (\[Beta])"}, 0.01, 
         1}, {{$CellContext`gamma$$, 0.1, "Base recovery rate (\[Gamma])"}, 
         0.01, 1}, {{$CellContext`a$$, 0.1, "Prey growth rate (a)"}, 0.01, 
         1}, {{$CellContext`b$$, 0.02, "Predation rate (b)"}, 0.001, 
         0.2}, {{$CellContext`c$$, 0.1, "Predator growth per prey (c)"}, 0.01,
          1}, {{$CellContext`d$$, 0.01, "Predator death (d)"}, 0.001, 
         0.2}, {{$CellContext`interactionRate$$, 0.01, 
          "Zombie\[Dash]prey interaction rate"}, 0, 0.2}, 
        Delimiter, {{$CellContext`kBeta$$, 0.3, 
          "Prey effect on \[Beta] (kBeta)"}, 0., 
         2.}, {{$CellContext`kGamma$$, 0.5, 
          "Predator effect on \[Gamma] (kGamma)"}, 0., 2.}, 
        Delimiter, {{$CellContext`A\[Beta]$$, 0.3, 
          "Seasonal amplitude on \[Beta]"}, 0., 
         1.}, {{$CellContext`Aa$$, 0.2, "Seasonal amplitude on a"}, 0., 
         1.}, {{$CellContext`Tseason$$, 50, "Seasonal period (days)"}, 10, 
         100}, {{$CellContext`phi$$, 0, "Phase shift between \[Beta] and a"}, 
         0, 2 Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{
      660.7027975945127, {230.73037519455448`, 236.46230899855055`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.963681741019045*^9, 3.963681746735138*^9}, {
   3.963681795455099*^9, 3.9636817962774696`*^9}, 3.963682066200598*^9, 
   3.96374160847958*^9, 3.963782281735504*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"84ba29b0-cf3c-bb40-b916-59d683f4dd65"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementing zombie variants", "Subsubsection",
 CellChangeTimes->{{3.9636824172584076`*^9, 3.9636824301792927`*^9}, 
   3.9636831056996403`*^9, {3.9639359164822617`*^9, 
   3.963935923481394*^9}},ExpressionUUID->"cc68fce3-59fc-1e4a-9930-\
5ec34f31d916"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "S", ",", "Z1", ",", "Z2", ",", "Z3", ",", "R", ",", "prey", ",", 
     "predator", ",", "t"}], "]"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "equations", ",", "solution", ",", "betaSeasonal", ",", "aSeasonal", ",",
        "betaEff", ",", "gammaEff", ",", "r0", ",", "Ztotal", ",", 
       RowBox[{"w1", "=", "1"}], ",", 
       RowBox[{"w2", "=", "1.2"}], ",", 
       RowBox[{"w3", "=", "0.8"}]}], "}"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{"weights", " ", "for", " ", "transmissibility"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Seasonal", " ", "variation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"betaSeasonal", "[", "t_", "]"}], ":=", 
       RowBox[{"beta", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"A\[Beta]", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "*", "Pi", "*", 
             RowBox[{"t", "/", "Tseason"}]}], "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"aSeasonal", "[", "t_", "]"}], ":=", 
       RowBox[{"a", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Aa", "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"2", "*", "Pi", "*", 
              RowBox[{"t", "/", "Tseason"}]}], "+", "phi"}], "]"}]}]}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Shared", " ", "couplings", " ", "for", " ", "all", " ", "variants"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"betaEff", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"betaSeasonal", "[", "t", "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"kBeta", "*", 
           RowBox[{"prey", "[", "t", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gammaEff", "[", "t_", "]"}], ":=", 
       RowBox[{"gamma", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"kGamma", "*", 
           RowBox[{
            RowBox[{"predator", "[", "t", "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"predator", "[", "t", "]"}]}], ")"}]}]}]}], ")"}]}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"ODE", " ", "system"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"equations", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"S", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"betaEff", "[", "t", "]"}]}], " ", 
           RowBox[{"S", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"w1", " ", 
              RowBox[{"Z1", "[", "t", "]"}]}], "+", 
             RowBox[{"w2", " ", 
              RowBox[{"Z2", "[", "t", "]"}]}], "+", 
             RowBox[{"w3", " ", 
              RowBox[{"Z3", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Z1", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{
            RowBox[{"betaEff", "[", "t", "]"}], " ", "w1", " ", 
            RowBox[{"S", "[", "t", "]"}], " ", 
            RowBox[{"Z1", "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"gammaEff", "[", "t", "]"}], " ", 
            RowBox[{"Z1", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Z2", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{
            RowBox[{"betaEff", "[", "t", "]"}], " ", "w2", " ", 
            RowBox[{"S", "[", "t", "]"}], " ", 
            RowBox[{"Z2", "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"gammaEff", "[", "t", "]"}], " ", 
            RowBox[{"Z2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Z3", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{
            RowBox[{"betaEff", "[", "t", "]"}], " ", "w3", " ", 
            RowBox[{"S", "[", "t", "]"}], " ", 
            RowBox[{"Z3", "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"gammaEff", "[", "t", "]"}], " ", 
            RowBox[{"Z3", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"R", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"gammaEff", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Z1", "[", "t", "]"}], "+", 
             RowBox[{"Z2", "[", "t", "]"}], "+", 
             RowBox[{"Z3", "[", "t", "]"}]}], ")"}]}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"prey", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{
            RowBox[{"aSeasonal", "[", "t", "]"}], " ", 
            RowBox[{"prey", "[", "t", "]"}]}], "-", 
           RowBox[{"b", " ", 
            RowBox[{"prey", "[", "t", "]"}], " ", 
            RowBox[{"predator", "[", "t", "]"}]}], "-", 
           RowBox[{"interactionRate", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Z1", "[", "t", "]"}], "+", 
              RowBox[{"Z2", "[", "t", "]"}], "+", 
              RowBox[{"Z3", "[", "t", "]"}]}], ")"}], " ", 
            RowBox[{"prey", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"predator", "'"}], "[", "t", "]"}], "==", 
          RowBox[{
           RowBox[{"c", " ", 
            RowBox[{"prey", "[", "t", "]"}], " ", 
            RowBox[{"predator", "[", "t", "]"}]}], "-", 
           RowBox[{"d", " ", 
            RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Initial", " ", "conditions"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"S", "[", "0", "]"}], "==", "0.99"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Z1", "[", "0", "]"}], "==", "0.005"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Z2", "[", "0", "]"}], "==", "0.003"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Z3", "[", "0", "]"}], "==", "0.002"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"R", "[", "0", "]"}], "==", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"prey", "[", "0", "]"}], "==", "0.99"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"predator", "[", "0", "]"}], "==", "0.01"}]}], "}"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Solve", " ", "system"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"solution", "=", "\[IndentingNewLine]", 
       RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
        RowBox[{"equations", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "S", ",", "Z1", ",", "Z2", ",", "Z3", ",", "R", ",", "prey", ",", 
           "predator"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Method", "->", "\"\<StiffnessSwitching\>\""}], ",", 
         RowBox[{"MaxStepFraction", "->", 
          RowBox[{"1", "/", "500"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ztotal", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"Z1", "[", "t", "]"}], "+", 
        RowBox[{"Z2", "[", "t", "]"}], "+", 
        RowBox[{"Z3", "[", "t", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r0", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"betaEff", "[", "t", "]"}], " ", 
           RowBox[{"S", "[", "t", "]"}]}], ")"}], "/", 
         RowBox[{"gammaEff", "[", "t", "]"}]}], "/.", " ", "solution"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Column", "[", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"S", "[", "t", "]"}], ",", 
               RowBox[{"Ztotal", "[", "t", "]"}], ",", 
               RowBox[{"R", "[", "t", "]"}]}], "}"}], "/.", " ", "solution"}],
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"{", 
             
             RowBox[{"\"\<Susceptible\>\"", ",", "\"\<Infected (total)\>\"", 
              ",", "\"\<Recovered\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Time\>\"", ",", "\"\<Proportion\>\""}], "}"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", "All"}], ",", 
           RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             
             RowBox[{"\"\<SIR Dynamics (with 3 Zombie Variants)\>\"", ",", 
              "Bold", ",", "14"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Z1", "[", "t", "]"}], ",", 
               RowBox[{"Z2", "[", "t", "]"}], ",", 
               RowBox[{"Z3", "[", "t", "]"}]}], "}"}], "/.", " ", 
             "solution"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"{", 
             
             RowBox[{"\"\<Variant 1\>\"", ",", "\"\<Variant 2\>\"", 
              ",", "\"\<Variant 3\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Time\>\"", ",", "\"\<Infected by Variant\>\""}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             
             RowBox[{"\"\<Individual Zombie Variants\>\"", ",", "Bold", ",", 
              "14"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"prey", "[", "t", "]"}], ",", 
               RowBox[{"predator", "[", "t", "]"}]}], "}"}], "/.", " ", 
             "solution"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Prey\>\"", ",", "\"\<Predator\>\""}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<Time\>\"", ",", "\"\<Population (arb. units)\>\""}],
              "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"Style", "[", 
             
             RowBox[{"\"\<Predator\[Dash]Prey Dynamics (with Seasons)\>\"", ",",
               "Bold", ",", "14"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Show", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"r0", "[", "t", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Frame", "->", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "->", 
              RowBox[{"{", 
               RowBox[{"\"\<Time\>\"", ",", "\"\<R0(t)\>\""}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "->", "Thick"}], ",", "\[IndentingNewLine]", 
             RowBox[{"PlotLabel", "->", 
              RowBox[{"Style", "[", 
               
               RowBox[{"\"\<Instantaneous R0(t)\>\"", ",", "Bold", ",", 
                "14"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
             RowBox[{"PlotStyle", "->", 
              RowBox[{"{", "Dashed", "}"}]}]}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
        "}"}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Sliders", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "beta", ",", "0.30", ",", "\"\<Base infection rate (\[Beta])\>\""}], 
      "}"}], ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "gamma", ",", "0.10", ",", "\"\<Base recovery rate (\[Gamma])\>\""}], 
      "}"}], ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "0.10", ",", "\"\<Prey growth rate (a)\>\""}], "}"}], 
     ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "0.02", ",", "\"\<Predation rate (b)\>\""}], "}"}], ",",
      "0.001", ",", "0.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0.10", ",", "\"\<Predator growth per prey (c)\>\""}],
       "}"}], ",", "0.01", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "0.01", ",", "\"\<Predator death (d)\>\""}], "}"}], ",",
      "0.001", ",", "0.2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interactionRate", ",", "0.01", 
       ",", "\"\<Zombie\[Dash]prey interaction rate\>\""}], "}"}], ",", "0", ",",
      "0.2"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "kBeta", ",", "0.3", ",", "\"\<Prey effect on \[Beta] (kBeta)\>\""}], 
      "}"}], ",", "0.", ",", "2."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "kGamma", ",", "0.5", 
       ",", "\"\<Predator effect on \[Gamma] (kGamma)\>\""}], "}"}], ",", 
     "0.", ",", "2."}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "A\[Beta]", ",", "0.3", ",", "\"\<Seasonal amplitude on \[Beta]\>\""}], 
      "}"}], ",", "0.", ",", "1."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Aa", ",", "0.2", ",", "\"\<Seasonal amplitude on a\>\""}], 
      "}"}], ",", "0.", ",", "1."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Tseason", ",", "50", ",", "\"\<Seasonal period (days)\>\""}], 
      "}"}], ",", "10", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "phi", ",", "0", ",", "\"\<Phase shift between \[Beta] and a\>\""}], 
      "}"}], ",", "0", ",", 
     RowBox[{"2", "*", "Pi"}]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.963783432408531*^9, 3.963783432408531*^9}, {
  3.963935670947344*^9, 3.963935856655548*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"d1d00b98-80d4-6c4c-91a5-61e0259afa44"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.624, $CellContext`Aa$$ = 
    0.504, $CellContext`A\[Beta]$$ = 1., $CellContext`b$$ = 
    0.08900000000000001, $CellContext`beta$$ = 0.593, $CellContext`c$$ = 
    0.128, $CellContext`d$$ = 0.1258, $CellContext`gamma$$ = 
    0.24200000000000002`, $CellContext`interactionRate$$ = 
    0., $CellContext`kBeta$$ = 0.73, $CellContext`kGamma$$ = 
    0.20500000000000002`, $CellContext`phi$$ = 
    0.8670795723907829, $CellContext`Tseason$$ = 10., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`beta$$], 0.3, "Base infection rate (\[Beta])"}, 0.01,
       1, ControlType -> Manipulator}, {{
       Hold[$CellContext`gamma$$], 0.1, "Base recovery rate (\[Gamma])"}, 
      0.01, 1, ControlType -> Manipulator}, {{
       Hold[$CellContext`a$$], 0.1, "Prey growth rate (a)"}, 0.01, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`b$$], 0.02, "Predation rate (b)"}, 0.001, 0.2, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`c$$], 0.1, "Predator growth per prey (c)"}, 0.01, 1, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`d$$], 0.01, "Predator death (d)"}, 0.001, 0.2, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`interactionRate$$], 0.01, 
       "Zombie\[Dash]prey interaction rate"}, 0, 0.2, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`kBeta$$], 0.3, "Prey effect on \[Beta] (kBeta)"}, 0.,
       2., ControlType -> Manipulator}, {{
       Hold[$CellContext`kGamma$$], 0.5, 
       "Predator effect on \[Gamma] (kGamma)"}, 0., 2., ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`A\[Beta]$$], 0.3, "Seasonal amplitude on \[Beta]"}, 
      0., 1., ControlType -> Manipulator}, {{
       Hold[$CellContext`Aa$$], 0.2, "Seasonal amplitude on a"}, 0., 1., 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`Tseason$$], 50, "Seasonal period (days)"}, 10, 100, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`phi$$], 0, "Phase shift between \[Beta] and a"}, 0, 
      2 Pi, ControlType -> Manipulator}}, Typeset`size$$ = {
    304.79717237949365`, {271.9604063506016, 277.6923401545977}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.1, $CellContext`Aa$$ = 
        0.2, $CellContext`A\[Beta]$$ = 0.3, $CellContext`b$$ = 
        0.02, $CellContext`beta$$ = 0.3, $CellContext`c$$ = 
        0.1, $CellContext`d$$ = 0.01, $CellContext`gamma$$ = 
        0.1, $CellContext`interactionRate$$ = 0.01, $CellContext`kBeta$$ = 
        0.3, $CellContext`kGamma$$ = 0.5, $CellContext`phi$$ = 
        0, $CellContext`Tseason$$ = 50}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`equations$, $CellContext`solution$, \
$CellContext`betaSeasonal$, $CellContext`aSeasonal$, $CellContext`betaEff$, \
$CellContext`gammaEff$, $CellContext`r0$, $CellContext`Ztotal$, \
$CellContext`w1$ = 1, $CellContext`w2$ = 1.2, $CellContext`w3$ = 
         0.8}, $CellContext`betaSeasonal$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`beta$$ (
           1 + $CellContext`A\[Beta]$$ 
            Sin[2 Pi ($CellContext`t$/$CellContext`Tseason$$)]); \
$CellContext`aSeasonal$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`a$$ (
           1 + $CellContext`Aa$$ 
            Sin[2 Pi ($CellContext`t$/$CellContext`Tseason$$) + \
$CellContext`phi$$]); $CellContext`betaEff$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`betaSeasonal$[$CellContext`t$]/(
          1 + $CellContext`kBeta$$ $CellContext`prey[$CellContext`t$]); \
$CellContext`gammaEff$[
           Pattern[$CellContext`t$, 
            Blank[]]] := $CellContext`gamma$$ (
           1 + $CellContext`kGamma$$ ($CellContext`predator[$CellContext`t$]/(
             1 + $CellContext`predator[$CellContext`t$]))); \
$CellContext`equations$ = {
          Derivative[
            1][$CellContext`S][$CellContext`t] == \
(-$CellContext`betaEff$[$CellContext`t]) $CellContext`S[$CellContext`t] \
($CellContext`w1$ $CellContext`Z1[$CellContext`t] + $CellContext`w2$ \
$CellContext`Z2[$CellContext`t] + $CellContext`w3$ \
$CellContext`Z3[$CellContext`t]), 
           Derivative[
            1][$CellContext`Z1][$CellContext`t] == \
$CellContext`betaEff$[$CellContext`t] $CellContext`w1$ \
$CellContext`S[$CellContext`t] $CellContext`Z1[$CellContext`t] - \
$CellContext`gammaEff$[$CellContext`t] $CellContext`Z1[$CellContext`t], 
           Derivative[
            1][$CellContext`Z2][$CellContext`t] == \
$CellContext`betaEff$[$CellContext`t] $CellContext`w2$ \
$CellContext`S[$CellContext`t] $CellContext`Z2[$CellContext`t] - \
$CellContext`gammaEff$[$CellContext`t] $CellContext`Z2[$CellContext`t], 
           Derivative[
            1][$CellContext`Z3][$CellContext`t] == \
$CellContext`betaEff$[$CellContext`t] $CellContext`w3$ \
$CellContext`S[$CellContext`t] $CellContext`Z3[$CellContext`t] - \
$CellContext`gammaEff$[$CellContext`t] $CellContext`Z3[$CellContext`t], 
           Derivative[
            1][$CellContext`R][$CellContext`t] == \
$CellContext`gammaEff$[$CellContext`t] ($CellContext`Z1[$CellContext`t] + \
$CellContext`Z2[$CellContext`t] + $CellContext`Z3[$CellContext`t]), 
           Derivative[
            1][$CellContext`prey][$CellContext`t] == \
$CellContext`aSeasonal$[$CellContext`t] $CellContext`prey[$CellContext`t] - \
$CellContext`b$$ $CellContext`prey[$CellContext`t] \
$CellContext`predator[$CellContext`t] - $CellContext`interactionRate$$ \
($CellContext`Z1[$CellContext`t] + $CellContext`Z2[$CellContext`t] + \
$CellContext`Z3[$CellContext`t]) $CellContext`prey[$CellContext`t], 
           Derivative[
            1][$CellContext`predator][$CellContext`t] == $CellContext`c$$ \
$CellContext`prey[$CellContext`t] $CellContext`predator[$CellContext`t] - \
$CellContext`d$$ $CellContext`predator[$CellContext`t], $CellContext`S[0] == 
           0.99, $CellContext`Z1[0] == 0.005, $CellContext`Z2[0] == 
           0.003, $CellContext`Z3[0] == 0.002, $CellContext`R[0] == 
           0, $CellContext`prey[0] == 0.99, $CellContext`predator[0] == 
           0.01}; $CellContext`solution$ = 
         NDSolve[$CellContext`equations$, {$CellContext`S, $CellContext`Z1, \
$CellContext`Z2, $CellContext`Z3, $CellContext`R, $CellContext`prey, \
$CellContext`predator}, {$CellContext`t, 0, 100}, Method -> 
           "StiffnessSwitching", MaxStepFraction -> 
           1/500]; $CellContext`Ztotal$[
           Pattern[$CellContext`t, 
            
            Blank[]]] := $CellContext`Z1[$CellContext`t] + \
$CellContext`Z2[$CellContext`t] + $CellContext`Z3[$CellContext`t]; \
$CellContext`r0$[
           Pattern[$CellContext`t$, 
            Blank[]]] := 
         ReplaceAll[($CellContext`betaEff$[$CellContext`t$] \
$CellContext`S[$CellContext`t$])/$CellContext`gammaEff$[$CellContext`t$], \
$CellContext`solution$]; Column[{
           Plot[
            Evaluate[
             ReplaceAll[{
               $CellContext`S[$CellContext`t], 
               $CellContext`Ztotal$[$CellContext`t], 
               $CellContext`R[$CellContext`t]}, $CellContext`solution$]], \
{$CellContext`t, 0, 100}, 
            PlotLegends -> {"Susceptible", "Infected (total)", "Recovered"}, 
            Frame -> True, FrameLabel -> {"Time", "Proportion"}, PlotRange -> 
            All, PlotStyle -> Thick, PlotLabel -> 
            Style["SIR Dynamics (with 3 Zombie Variants)", Bold, 14]], 
           Plot[
            Evaluate[
             ReplaceAll[{
               $CellContext`Z1[$CellContext`t], 
               $CellContext`Z2[$CellContext`t], 
               $CellContext`Z3[$CellContext`t]}, $CellContext`solution$]], \
{$CellContext`t, 0, 100}, 
            PlotLegends -> {"Variant 1", "Variant 2", "Variant 3"}, Frame -> 
            True, FrameLabel -> {"Time", "Infected by Variant"}, PlotRange -> 
            All, PlotStyle -> Thick, PlotLabel -> 
            Style["Individual Zombie Variants", Bold, 14]], 
           Plot[
            Evaluate[
             ReplaceAll[{
               $CellContext`prey[$CellContext`t], 
               $CellContext`predator[$CellContext`t]}, \
$CellContext`solution$]], {$CellContext`t, 0, 100}, 
            PlotLegends -> {"Prey", "Predator"}, Frame -> True, 
            FrameLabel -> {"Time", "Population (arb. units)"}, PlotRange -> 
            All, PlotStyle -> Thick, PlotLabel -> 
            Style["Predator\[Dash]Prey Dynamics (with Seasons)", Bold, 14]], 
           Show[
            Plot[
             $CellContext`r0$[$CellContext`t], {$CellContext`t, 0, 100}, 
             Frame -> True, FrameLabel -> {"Time", "R0(t)"}, PlotRange -> All,
              PlotStyle -> Thick, PlotLabel -> 
             Style["Instantaneous R0(t)", Bold, 14]], 
            Plot[1, {$CellContext`t, 0, 100}, PlotStyle -> {Dashed}]]}]], 
      "Specifications" :> {{{$CellContext`beta$$, 0.3, 
          "Base infection rate (\[Beta])"}, 0.01, 
         1}, {{$CellContext`gamma$$, 0.1, "Base recovery rate (\[Gamma])"}, 
         0.01, 1}, {{$CellContext`a$$, 0.1, "Prey growth rate (a)"}, 0.01, 
         1}, {{$CellContext`b$$, 0.02, "Predation rate (b)"}, 0.001, 
         0.2}, {{$CellContext`c$$, 0.1, "Predator growth per prey (c)"}, 0.01,
          1}, {{$CellContext`d$$, 0.01, "Predator death (d)"}, 0.001, 
         0.2}, {{$CellContext`interactionRate$$, 0.01, 
          "Zombie\[Dash]prey interaction rate"}, 0, 0.2}, 
        Delimiter, {{$CellContext`kBeta$$, 0.3, 
          "Prey effect on \[Beta] (kBeta)"}, 0., 
         2.}, {{$CellContext`kGamma$$, 0.5, 
          "Predator effect on \[Gamma] (kGamma)"}, 0., 2.}, 
        Delimiter, {{$CellContext`A\[Beta]$$, 0.3, 
          "Seasonal amplitude on \[Beta]"}, 0., 
         1.}, {{$CellContext`Aa$$, 0.2, "Seasonal amplitude on a"}, 0., 
         1.}, {{$CellContext`Tseason$$, 50, "Seasonal period (days)"}, 10, 
         100}, {{$CellContext`phi$$, 0, "Phase shift between \[Beta] and a"}, 
         0, 2 Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{
      676.590982141937, {301.1712461943516, 306.9031799983477}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9637834340955276`*^9, 3.9639358601513824`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"164d264e-cdaa-9247-87cc-106c2629e373"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wrapping the core simulation in a callable function", "Subsection",
 CellChangeTimes->{{3.964085502656395*^9, 
  3.9640855131090374`*^9}},ExpressionUUID->"eee10e97-302f-9648-8eca-\
312be1a9fd5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "simulateZombieSystem", "]"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simulateZombieSystem", "[", "params_Association", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"beta", "=", 
         RowBox[{"params", "[", "\"\<beta\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"gamma", "=", 
         RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"params", "[", "\"\<a\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"b", "=", 
         RowBox[{"params", "[", "\"\<b\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"params", "[", "\"\<c\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"d", "=", 
         RowBox[{"params", "[", "\"\<d\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"interactionRate", "=", 
         RowBox[{"params", "[", "\"\<interactionRate\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"kBeta", "=", 
         RowBox[{"params", "[", "\"\<kBeta\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"kGamma", "=", 
         RowBox[{"params", "[", "\"\<kGamma\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"A\[Beta]", "=", 
         RowBox[{"params", "[", "\"\<A\[Beta]\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Aa", "=", 
         RowBox[{"params", "[", "\"\<Aa\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Tseason", "=", 
         RowBox[{"params", "[", "\"\<Tseason\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"phi", "=", 
         RowBox[{"params", "[", "\"\<phi\>\"", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"w1", "=", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"w2", "=", "1.2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"w3", "=", "0.8"}], ",", "\[IndentingNewLine]", 
        "betaSeasonal", ",", "\[IndentingNewLine]", "aSeasonal", ",", 
        "\[IndentingNewLine]", "betaEff", ",", "\[IndentingNewLine]", 
        "gammaEff", ",", "\[IndentingNewLine]", "equations", ",", 
        "\[IndentingNewLine]", "solution"}], "\[IndentingNewLine]", "}"}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Seasonal", " ", "effects"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"betaSeasonal", "[", "t_", "]"}], ":=", 
        RowBox[{"beta", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"A\[Beta]", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", "*", "Pi", "*", 
              RowBox[{"t", "/", "Tseason"}]}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"aSeasonal", "[", "t_", "]"}], ":=", 
        RowBox[{"a", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Aa", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"2", "*", "Pi", "*", 
               RowBox[{"t", "/", "Tseason"}]}], "+", "phi"}], "]"}]}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Coupling", " ", "effects"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"betaEff", "[", "t_", "]"}], ":=", 
        RowBox[{
         RowBox[{"betaSeasonal", "[", "t", "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"kBeta", "*", 
            RowBox[{"prey", "[", "t", "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gammaEff", "[", "t_", "]"}], ":=", 
        RowBox[{"gamma", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"kGamma", "*", 
            RowBox[{
             RowBox[{"predator", "[", "t", "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"predator", "[", "t", "]"}]}], ")"}]}]}]}], ")"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"ODE", " ", "system"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"equations", "=", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"S", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"betaEff", "[", "t", "]"}]}], " ", 
            RowBox[{"S", "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w1", " ", 
               RowBox[{"Z1", "[", "t", "]"}]}], "+", 
              RowBox[{"w2", " ", 
               RowBox[{"Z2", "[", "t", "]"}]}], "+", 
              RowBox[{"w3", " ", 
               RowBox[{"Z3", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Z1", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{
             RowBox[{"betaEff", "[", "t", "]"}], " ", "w1", " ", 
             RowBox[{"S", "[", "t", "]"}], " ", 
             RowBox[{"Z1", "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"gammaEff", "[", "t", "]"}], " ", 
             RowBox[{"Z1", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Z2", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{
             RowBox[{"betaEff", "[", "t", "]"}], " ", "w2", " ", 
             RowBox[{"S", "[", "t", "]"}], " ", 
             RowBox[{"Z2", "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"gammaEff", "[", "t", "]"}], " ", 
             RowBox[{"Z2", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Z3", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{
             RowBox[{"betaEff", "[", "t", "]"}], " ", "w3", " ", 
             RowBox[{"S", "[", "t", "]"}], " ", 
             RowBox[{"Z3", "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"gammaEff", "[", "t", "]"}], " ", 
             RowBox[{"Z3", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"R", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{"gammaEff", "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Z1", "[", "t", "]"}], "+", 
              RowBox[{"Z2", "[", "t", "]"}], "+", 
              RowBox[{"Z3", "[", "t", "]"}]}], ")"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"prey", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{
             RowBox[{"aSeasonal", "[", "t", "]"}], " ", 
             RowBox[{"prey", "[", "t", "]"}]}], "-", 
            RowBox[{"b", " ", 
             RowBox[{"prey", "[", "t", "]"}], " ", 
             RowBox[{"predator", "[", "t", "]"}]}], "-", 
            RowBox[{"interactionRate", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Z1", "[", "t", "]"}], "+", 
               RowBox[{"Z2", "[", "t", "]"}], "+", 
               RowBox[{"Z3", "[", "t", "]"}]}], ")"}], " ", 
             RowBox[{"prey", "[", "t", "]"}]}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"predator", "'"}], "[", "t", "]"}], "==", 
           RowBox[{
            RowBox[{"c", " ", 
             RowBox[{"prey", "[", "t", "]"}], " ", 
             RowBox[{"predator", "[", "t", "]"}]}], "-", 
            RowBox[{"d", " ", 
             RowBox[{"predator", "[", "t", "]"}]}]}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Initial", " ", "conditions"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"S", "[", "0", "]"}], "==", "0.99"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Z1", "[", "0", "]"}], "==", "0.005"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Z2", "[", "0", "]"}], "==", "0.003"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Z3", "[", "0", "]"}], "==", "0.002"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"R", "[", "0", "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prey", "[", "0", "]"}], "==", "0.99"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"predator", "[", "0", "]"}], "==", "0.01"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Solve", " ", "system"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"solution", "=", 
        RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
         RowBox[{"equations", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
           "S", ",", "Z1", ",", "Z2", ",", "Z3", ",", "R", ",", "prey", ",", 
            "predator"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Method", "->", "\"\<StiffnessSwitching\>\""}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "rules", " ", "so", " ", "caller", " ", "can", " ", 
         "extract", " ", "functions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"First", "[", "solution", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", "TEST"}]}], " ", 
     RowBox[{"PARAMETERS", "--"}]}], "-"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"params", "=", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<beta\>\"", "->", "0.3"}], ",", 
      RowBox[{"\"\<gamma\>\"", "->", "0.1"}], ",", 
      RowBox[{"\"\<a\>\"", "->", "0.1"}], ",", 
      RowBox[{"\"\<b\>\"", "->", "0.02"}], ",", 
      RowBox[{"\"\<c\>\"", "->", "0.05"}], ",", 
      RowBox[{"\"\<d\>\"", "->", "0.05"}], ",", 
      RowBox[{"\"\<interactionRate\>\"", "->", "0.01"}], ",", 
      RowBox[{"\"\<kBeta\>\"", "->", "0.3"}], ",", 
      RowBox[{"\"\<kGamma\>\"", "->", "0.5"}], ",", 
      RowBox[{"\"\<A\[Beta]\>\"", "->", "0.3"}], ",", 
      RowBox[{"\"\<Aa\>\"", "->", "0.2"}], ",", 
      RowBox[{"\"\<Tseason\>\"", "->", "50"}], ",", 
      RowBox[{"\"\<phi\>\"", "->", "0"}]}], "|>"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"--", 
      RowBox[{"-", "RUN"}]}], " ", "CORE", " ", 
     RowBox[{"SYSTEM", "--"}]}], "-"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"solRules", "=", 
    RowBox[{"simulateZombieSystem", "[", "params", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"Extract", " ", "functions", " ", "from", " ", "rules"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sfun", "=", 
   RowBox[{"S", "/.", " ", "solRules"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Z1fun", "=", 
   RowBox[{"Z1", "/.", " ", "solRules"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Z2fun", "=", 
   RowBox[{"Z2", "/.", " ", "solRules"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Z3fun", "=", 
   RowBox[{"Z3", "/.", " ", "solRules"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Rfun", "=", 
   RowBox[{"R", "/.", " ", "solRules"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"preyFun", "=", 
   RowBox[{"prey", "/.", " ", "solRules"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"predFun", "=", 
    RowBox[{"predator", "/.", " ", "solRules"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ZtotalFun", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Z1fun", "[", "t", "]"}], "+", 
    RowBox[{"Z2fun", "[", "t", "]"}], "+", 
    RowBox[{"Z3fun", "[", "t", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.964085524157921*^9, 3.964085524157921*^9}, 
   3.964085554199444*^9, {3.9640857008518143`*^9, 3.964085702205454*^9}, 
   3.9642517769829655`*^9, {3.964251824494341*^9, 3.964251839818966*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"e996353b-9830-d747-a576-e626f0b6782c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dimensionless units group report", "Section",
 CellChangeTimes->{{3.964247296521845*^9, 3.9642473040271587`*^9}, {
  3.9642490062095833`*^9, 
  3.9642490066911144`*^9}},ExpressionUUID->"115f3d23-d6b0-5443-a1a8-\
385e64eebd69"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "dimensionlessGroups", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dimensionlessGroups", "[", "params_Association", "]"}], ":=", 
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<R0 (\[Beta]/\[Gamma])\>\"", "->", 
       RowBox[{
        RowBox[{"params", "[", "\"\<beta\>\"", "]"}], "/", 
        RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<\[Alpha] (a/\[Gamma])\>\"", "->", 
       RowBox[{
        RowBox[{"params", "[", "\"\<a\>\"", "]"}], "/", 
        RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<\[Delta] (d/\[Gamma])\>\"", "->", 
       RowBox[{
        RowBox[{"params", "[", "\"\<d\>\"", "]"}], "/", 
        RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<\[Theta] (c/\[Gamma])\>\"", "->", 
       RowBox[{
        RowBox[{"params", "[", "\"\<c\>\"", "]"}], "/", 
        RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<\[Beta]_pq (b/\[Gamma])\>\"", "->", 
       RowBox[{
        RowBox[{"params", "[", "\"\<b\>\"", "]"}], "/", 
        RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<\[Chi] (interaction/\[Gamma])\>\"", "->", 
       RowBox[{
        RowBox[{"params", "[", "\"\<interactionRate\>\"", "]"}], "/", 
        RowBox[{"params", "[", "\"\<gamma\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<T\:0303 (\[Gamma] Tseason)\>\"", "->", 
       RowBox[{
        RowBox[{"params", "[", "\"\<gamma\>\"", "]"}], "*", 
        RowBox[{"params", "[", "\"\<Tseason\>\"", "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<k\[Beta]\>\"", "->", 
       RowBox[{"params", "[", "\"\<kBeta\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<k\[Gamma]\>\"", "->", 
       RowBox[{"params", "[", "\"\<kGamma\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<A\[Beta]\>\"", "->", 
       RowBox[{"params", "[", "\"\<A\[Beta]\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Aa\>\"", "->", 
       RowBox[{"params", "[", "\"\<Aa\>\"", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<\[Phi]\>\"", "->", 
       RowBox[{"params", "[", "\"\<phi\>\"", "]"}]}]}], "|>"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Normal", "@", 
      RowBox[{"KeyValueMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#1", ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"#2", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "3"}], "}"}]}], "]"}]}], "}"}], "&"}], ",", 
        RowBox[{"dimensionlessGroups", "[", "params", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<Group\>\"", ",", "\"\<Value\>\""}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}], "\n"}], "Input",
 CellChangeTimes->{{3.9642473055238686`*^9, 3.964247342979082*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"d3f57770-fe08-1b4e-8bc1-db703967fb49"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Group\"\>", "\<\"Value\"\>"},
    {"\<\"R0 (\[Beta]/\[Gamma])\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"3.000\"\>",
        ShowStringCharacters->False],
       3.,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"\[Alpha] (a/\[Gamma])\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"1.000\"\>",
        ShowStringCharacters->False],
       1.,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"\[Delta] (d/\[Gamma])\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.500\"\>",
        ShowStringCharacters->False],
       0.5,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"\[Theta] (c/\[Gamma])\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.500\"\>",
        ShowStringCharacters->False],
       0.5,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"\[Beta]_pq (b/\[Gamma])\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.200\"\>",
        ShowStringCharacters->False],
       0.2,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"\[Chi] (interaction/\[Gamma])\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.100\"\>",
        ShowStringCharacters->False],
       0.1,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"T\:0303 (\[Gamma] Tseason)\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"5.000\"\>",
        ShowStringCharacters->False],
       5.,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"k\[Beta]\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.300\"\>",
        ShowStringCharacters->False],
       0.3,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"k\[Gamma]\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.500\"\>",
        ShowStringCharacters->False],
       0.5,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"A\[Beta]\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.300\"\>",
        ShowStringCharacters->False],
       0.3,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"Aa\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.200\"\>",
        ShowStringCharacters->False],
       0.2,
       AutoDelete->True],
      NumberForm[#, {6, 3}]& ]},
    {"\<\"\[Phi]\"\>", 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0\"\>",
        ShowStringCharacters->False],
       0,
       Editable->False],
      NumberForm[#, {6, 3}]& ]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.964247349866207*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"423c9505-672a-8641-ad50-c0b2aaf85846"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 741.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (March 14, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bbe8db27-430d-344f-8e93-d0d64fa3c041"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ChatGeneratedCell"->{
  Cell[69768, 1307, 5449, 147, 629, "Code",ExpressionUUID->"86782812-c00e-af4c-a001-0fc516ca0968",
   CellTags->"ChatGeneratedCell"],
  Cell[75220, 1456, 130335, 2228, 232, "Output",ExpressionUUID->"88575c41-daf1-f145-ae30-b7ec4cc01c4f",
   CellTags->"ChatGeneratedCell"],
  Cell[205819, 3697, 8446, 220, 998, "Code",ExpressionUUID->"e1ab3e7b-1f31-5a4a-b6b4-b46492e079f9",
   CellTags->"ChatGeneratedCell"],
  Cell[214268, 3919, 207307, 3581, 235, "Output",ExpressionUUID->"c79f6ba3-691e-a948-8097-f541a1b2a550",
   CellTags->"ChatGeneratedCell"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ChatGeneratedCell", 516860, 9730}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 222, 4, 53, "Subsection",ExpressionUUID->"475035a8-684c-5544-ba31-1dfafddae7f6"],
Cell[CellGroupData[{
Cell[823, 30, 3718, 88, 489, "Code",ExpressionUUID->"1561e099-daaf-8246-a542-46eef122b149"],
Cell[4544, 120, 64968, 1174, 232, "Output",ExpressionUUID->"51944f2e-bd8e-734e-bc07-6b7244110016"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69561, 1300, 182, 3, 53, "Subsection",ExpressionUUID->"58afae42-eb50-8f43-be6d-8063b38c6330"],
Cell[CellGroupData[{
Cell[69768, 1307, 5449, 147, 629, "Code",ExpressionUUID->"86782812-c00e-af4c-a001-0fc516ca0968",
 CellTags->"ChatGeneratedCell"],
Cell[75220, 1456, 130335, 2228, 232, "Output",ExpressionUUID->"88575c41-daf1-f145-ae30-b7ec4cc01c4f",
 CellTags->"ChatGeneratedCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[205604, 3690, 190, 3, 53, "Subsection",ExpressionUUID->"0fa57715-4797-e04c-a955-5d8c8375e428"],
Cell[CellGroupData[{
Cell[205819, 3697, 8446, 220, 998, "Code",ExpressionUUID->"e1ab3e7b-1f31-5a4a-b6b4-b46492e079f9",
 CellTags->"ChatGeneratedCell"],
Cell[214268, 3919, 207307, 3581, 235, "Output",ExpressionUUID->"c79f6ba3-691e-a948-8097-f541a1b2a550",
 CellTags->"ChatGeneratedCell"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[421624, 7506, 191, 3, 53, "Subsection",ExpressionUUID->"0ab23b14-9867-a34b-92bc-feaed46174a2"],
Cell[CellGroupData[{
Cell[421840, 7513, 13470, 327, 1279, "Code",ExpressionUUID->"eb64599b-d102-c64a-8381-10b90794c80d"],
Cell[435313, 7842, 8346, 157, 493, "Output",ExpressionUUID->"0a8d78ca-2de8-754c-bcb0-4ec9b38c870b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[443708, 8005, 221, 4, 53, "Subsection",ExpressionUUID->"f1bc4deb-119e-d546-b6d8-8df24c79928f"],
Cell[443932, 8011, 154, 3, 28, "Input",ExpressionUUID->"d75fa0b9-eefc-7e41-8226-f49c29ff7664"],
Cell[CellGroupData[{
Cell[444111, 8018, 13617, 332, 1645, "Input",ExpressionUUID->"47f3b855-ffa0-0040-bdee-6f807c842428"],
Cell[457731, 8352, 9686, 179, 484, "Output",ExpressionUUID->"84ba29b0-cf3c-bb40-b916-59d683f4dd65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467454, 8536, 260, 4, 43, "Subsubsection",ExpressionUUID->"cc68fce3-59fc-1e4a-9930-5ec34f31d916"],
Cell[CellGroupData[{
Cell[467739, 8544, 17613, 424, 2064, "Input",ExpressionUUID->"d1d00b98-80d4-6c4c-91a5-61e0259afa44"],
Cell[485355, 8970, 11396, 210, 625, "Output",ExpressionUUID->"164d264e-cdaa-9247-87cc-106c2629e373"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[496812, 9187, 201, 3, 53, "Subsection",ExpressionUUID->"eee10e97-302f-9648-8eca-312be1a9fd5e"],
Cell[497016, 9192, 12821, 321, 1607, "Input",ExpressionUUID->"e996353b-9830-d747-a576-e626f0b6782c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509874, 9518, 232, 4, 66, "Section",ExpressionUUID->"115f3d23-d6b0-5443-a1a8-385e64eebd69"],
Cell[CellGroupData[{
Cell[510131, 9526, 3392, 81, 389, "Input",ExpressionUUID->"d3f57770-fe08-1b4e-8bc1-db703967fb49"],
Cell[513526, 9609, 2944, 106, 270, "Output",ExpressionUUID->"423c9505-672a-8641-ad50-c0b2aaf85846"]
}, Open  ]]
}, Open  ]]
}
]
*)

